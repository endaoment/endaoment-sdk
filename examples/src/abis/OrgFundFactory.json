{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Registry",
          "name": "_registry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "entity",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "entityType",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "entityManager",
          "type": "address"
        }
      ],
      "name": "EntityDeployed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ETH_PLACEHOLDER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "computeFundAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_orgId",
          "type": "bytes32"
        }
      ],
      "name": "computeOrgAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "deployFund",
      "outputs": [
        {
          "internalType": "contract Fund",
          "name": "_fund",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deployFundAndDonate",
      "outputs": [
        {
          "internalType": "contract Fund",
          "name": "_fund",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        },
        {
          "internalType": "contract ISwapWrapper",
          "name": "_swapWrapper",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenIn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "deployFundSwapAndDonate",
      "outputs": [
        {
          "internalType": "contract Fund",
          "name": "_fund",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_orgId",
          "type": "bytes32"
        }
      ],
      "name": "deployOrg",
      "outputs": [
        {
          "internalType": "contract Org",
          "name": "_org",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_orgId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deployOrgAndDonate",
      "outputs": [
        {
          "internalType": "contract Org",
          "name": "_org",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_orgId",
          "type": "bytes32"
        },
        {
          "internalType": "contract ISwapWrapper",
          "name": "_swapWrapper",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenIn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "deployOrgSwapAndDonate",
      "outputs": [
        {
          "internalType": "contract Org",
          "name": "_org",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundImplementation",
      "outputs": [
        {
          "internalType": "contract Fund",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "orgImplementation",
      "outputs": [
        {
          "internalType": "contract Org",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract Registry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "591:7499:66:-:0;;;1401:329;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;620:20:61;;;;1488:9:66::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;1468:29:66;;::::1;;::::0;;;1507:56:::1;::::0;-1:-1:-1;;;1507:56:66;;654:32:126;;;1507:56:66::1;::::0;::::1;636:51:126::0;-1:-1:-1;;;703:18:126;;;696:34;1468:29:66;1507:28:::1;::::0;609:18:126;;1507:56:66::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1608:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;1587:31:66;;::::1;;::::0;;;1628:52:::1;::::0;-1:-1:-1;;;1628:52:66;;989:15:126;;;1628:52:66::1;::::0;::::1;971:34:126::0;1677:1:66::1;1021:18:126::0;;;1014:43;1587:31:66;1628:29:::1;::::0;906:18:126;;1628:52:66::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1702:9;-1:-1:-1::0;;;;;1702:19:66::1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1690:33:66::1;;::::0;-1:-1:-1;591:7499:66;;;;;;;;;;:::o;:::-;;;;;;;;:::o;14:141:126:-;-1:-1:-1;;;;;99:31:126;;89:42;;79:70;;145:1;142;135:12;79:70;14:141;:::o;160:279::-;248:6;301:2;289:9;280:7;276:23;272:32;269:52;;;317:1;314;307:12;269:52;349:9;343:16;368:41;403:5;368:41;:::i;:::-;428:5;160:279;-1:-1:-1;;;160:279:126:o;1068:276::-;591:7499:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100d25760003560e01c8063a60fe71d1161007f578063c45e15a011610059578063c45e15a014610242578063c55dae631461026a578063db9e30cc1461029e578063e6be99fc146102be57600080fd5b8063a60fe71d146101fc578063ab438d6b1461021c578063bf37a6701461022f57600080fd5b80636fee7ed6116100b05780636fee7ed6146101745780637b103999146101a85780639fb8578d146101dc57600080fd5b8063099a81e3146100d75780630b307674146101205780632a4004b814610154575b600080fd5b3480156100e357600080fd5b506100f76100f2366004610f1f565b6102de565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b34801561012c57600080fd5b506100f77f000000000000000000000000000000000000000000000000000000000000000081565b34801561016057600080fd5b506100f761016f366004610f1f565b6103d4565b34801561018057600080fd5b506100f77f000000000000000000000000000000000000000000000000000000000000000081565b3480156101b457600080fd5b506100f77f000000000000000000000000000000000000000000000000000000000000000081565b3480156101e857600080fd5b506100f76101f7366004610f4b565b610671565b34801561020857600080fd5b506100f7610217366004610f4b565b61070d565b6100f761022a366004610fad565b6109c5565b6100f761023d36600461103c565b6109ec565b34801561024e57600080fd5b506100f773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b34801561027657600080fd5b506100f77f000000000000000000000000000000000000000000000000000000000000000081565b3480156102aa57600080fd5b506100f76102b93660046110b8565b610a11565b3480156102ca57600080fd5b506100f76102d93660046110da565b610a28565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084901b166020820152603481018290526000906103cb907f00000000000000000000000000000000000000000000000000000000000000009060540160405160208183030381529060405280519060200120306040517f602d8060093d393df3363d3d373d3d3d363d73000000000000000000000000008152606093841b60138201527f5af43d82803e903d91602b57fd5bf3ff000000000000000000000000000000006027820152921b6037830152604b8201526036808220606b830152605591012090565b90505b92915050565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084901b16602082015260348101829052600090610451907f00000000000000000000000000000000000000000000000000000000000000009060540160405160208183030381529060405280519060200120610a47565b6040517f485cc95500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116600483015285811660248301529192509082169063485cc95590604401600060405180830381600087803b1580156104e657600080fd5b505af11580156104fa573d6000803e3d6000fd5b50506040517f0160a6e200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301527f0000000000000000000000000000000000000000000000000000000000000000169250630160a6e29150602401600060405180830381600087803b15801561058757600080fd5b505af115801561059b573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663838453fd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610601573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610625919061110f565b60ff168273ffffffffffffffffffffffffffffffffffffffff167f1e3e29fb0c05e0c478577b9b3e207cbfe2952b1f9b239ed5d2535d4b24b6c57760405160405180910390a492915050565b60006103ce7f000000000000000000000000000000000000000000000000000000000000000083306040517f602d8060093d393df3363d3d373d3d3d363d73000000000000000000000000008152606093841b60138201527f5af43d82803e903d91602b57fd5bf3ff000000000000000000000000000000006027820152921b6037830152604b8201526036808220606b830152605591012090565b60006107397f000000000000000000000000000000000000000000000000000000000000000083610a47565b6040517fbe13f47c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590529192509082169063be13f47c90604401600060405180830381600087803b1580156107cd57600080fd5b505af11580156107e1573d6000803e3d6000fd5b50506040517f0160a6e200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301527f0000000000000000000000000000000000000000000000000000000000000000169250630160a6e29150602401600060405180830381600087803b15801561086e57600080fd5b505af1158015610882573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663481c6a756040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f59190611132565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663838453fd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610956573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097a919061110f565b60ff168273ffffffffffffffffffffffffffffffffffffffff167f1e3e29fb0c05e0c478577b9b3e207cbfe2952b1f9b239ed5d2535d4b24b6c57760405160405180910390a4919050565b60006109d188886103d4565b90506109e1818787878787610b2a565b979650505050505050565b60006109f78761070d565b9050610a07818787878787610b2a565b9695505050505050565b6000610a1c8361070d565b90506103ce8183610c56565b6000610a3484846103d4565b9050610a408183610c56565b9392505050565b60006040517f602d8060093d393df3363d3d373d3d3d363d730000000000000000000000000081528360601b60138201527f5af43d82803e903d91602b57fd5bf300000000000000000000000000000000006027820152826036826000f591505073ffffffffffffffffffffffffffffffffffffffff81166103ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f455243313136373a2063726561746532206661696c656400000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610bc057610b7d73ffffffffffffffffffffffffffffffffffffffff8516333086610cfc565b610b9f73ffffffffffffffffffffffffffffffffffffffff8516876000610de6565b610bc073ffffffffffffffffffffffffffffffffffffffff85168785610de6565b6040517fa2f48b9f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87169063a2f48b9f903490610c1c908990899089908990899060040161114f565b6000604051808303818588803b158015610c3557600080fd5b505af1158015610c49573d6000803e3d6000fd5b5050505050505050505050565b610c9873ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016338484610cfc565b8173ffffffffffffffffffffffffffffffffffffffff16630b2ec6726040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ce057600080fd5b505af1158015610cf4573d6000803e3d6000fd5b505050505050565b60006040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015273ffffffffffffffffffffffffffffffffffffffff8416602482015282604482015260008060648360008a5af1915050610d7981610eb3565b610ddf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610b21565b5050505050565b60006040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201528260248201526000806044836000895af1915050610e4781610eb3565b610ead576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f415050524f56455f4641494c45440000000000000000000000000000000000006044820152606401610b21565b50505050565b60003d82610ec557806000803e806000fd5b8060208114610edd578015610eee5760009250610ef3565b816000803e60005115159250610ef3565b600192505b5050919050565b73ffffffffffffffffffffffffffffffffffffffff81168114610f1c57600080fd5b50565b60008060408385031215610f3257600080fd5b8235610f3d81610efa565b946020939093013593505050565b600060208284031215610f5d57600080fd5b5035919050565b60008083601f840112610f7657600080fd5b50813567ffffffffffffffff811115610f8e57600080fd5b602083019150836020828501011115610fa657600080fd5b9250929050565b600080600080600080600060c0888a031215610fc857600080fd5b8735610fd381610efa565b9650602088013595506040880135610fea81610efa565b94506060880135610ffa81610efa565b93506080880135925060a088013567ffffffffffffffff81111561101d57600080fd5b6110298a828b01610f64565b989b979a50959850939692959293505050565b60008060008060008060a0878903121561105557600080fd5b86359550602087013561106781610efa565b9450604087013561107781610efa565b935060608701359250608087013567ffffffffffffffff81111561109a57600080fd5b6110a689828a01610f64565b979a9699509497509295939492505050565b600080604083850312156110cb57600080fd5b50508035926020909101359150565b6000806000606084860312156110ef57600080fd5b83356110fa81610efa565b95602085013595506040909401359392505050565b60006020828403121561112157600080fd5b815160ff81168114610a4057600080fd5b60006020828403121561114457600080fd5b8151610a4081610efa565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501168301019050969550505050505056fea264697066735822122041f3b86f0e558c73f04b8b34935409385edeaabd7323536131242509424e66a764736f6c634300080d0033",
    "sourceMap": "591:7499:66:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6772:268;;;;;;;;;;-1:-1:-1;6772:268:66;;;;;:::i;:::-;;:::i;:::-;;;669:42:126;657:55;;;639:74;;627:2;612:18;6772:268:66;;;;;;;1046:40;;;;;;;;;;;;;;;1973:478;;;;;;;;;;-1:-1:-1;1973:478:66;;;;;:::i;:::-;;:::i;935:38::-;;;;;;;;;;;;;;;304:34:61;;;;;;;;;;;;;;;6203:184:66;;;;;;;;;;-1:-1:-1;6203:184:66;;;;;:::i;:::-;;:::i;4235:322::-;;;;;;;;;;-1:-1:-1;4235:322:66;;;;;:::i;:::-;;:::i;3723:369::-;;;;;;:::i;:::-;;:::i;5595:329::-;;;;;;:::i;:::-;;:::i;779:84::-;;;;;;;;;;;;821:42;779:84;;1175:32;;;;;;;;;;;;;;;4814:162;;;;;;;;;;-1:-1:-1;4814:162:66;;;;;:::i;:::-;;:::i;2808:194::-;;;;;;;;;;-1:-1:-1;2808:194:66;;;;;:::i;:::-;;:::i;6772:268::-;6969:38;;4925:66:126;6982:17:66;;;;4913:79:126;6969:38:66;;;4901:92:126;5009:12;;;5002:28;;;6856:7:66;;6882:151;;6938:18;;5046:12:126;;6969:38:66;;;;;;;;;;;;6959:49;;;;;;7018:4;2723::22;2717:11;2753:66;2741:79;;2860:4;2856:25;;;2849:4;2840:14;;2833:49;2918:66;2911:4;2902:14;;2895:90;3021:19;;3014:4;3005:14;;2998:43;3070:4;3061:14;;3054:28;3133:4;3118:20;;;3111:4;3102:14;;3095:44;3191:4;3175:14;;3165:31;;2508:704;6882:151:66;6875:158;;6772:268;;;;;:::o;1973:478::-;2201:38;;4925:66:126;2214:17:66;;;;4913:79:126;2201:38:66;;;4901:92:126;5009:12;;;5002:28;;;2042:10:66;;2115:143;;2170:18;;5046:12:126;;2201:38:66;;;;;;;;;;;;2191:49;;;;;;2115:25;:143::i;:::-;2292:36;;;;;:16;2309:8;5340:15:126;;2292:36:66;;;5322:34:126;5392:15;;;5372:18;;;5365:43;2064:218:66;;-1:-1:-1;2292:16:66;;;;;;5234:18:126;;2292:36:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2338:31:66;;;;;:24;657:55:126;;;2338:31:66;;;639:74:126;2338:8:66;:24;;-1:-1:-1;2338:24:66;;-1:-1:-1;612:18:126;;2338:31:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2435:8;2384:60;;2415:5;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2384:60;;2407:5;2384:60;;;;;;;;;;;;1973:478;;;;:::o;6203:184::-;6269:7;6295:85;6338:17;6358:6;6374:4;2723::22;2717:11;2753:66;2741:79;;2860:4;2856:25;;;2849:4;2840:14;;2833:49;2918:66;2911:4;2902:14;;2895:90;3021:19;;3014:4;3005:14;;2998:43;3070:4;3061:14;;3054:28;3133:4;3118:20;;;3111:4;3102:14;;3095:44;3191:4;3175:14;;3165:31;;2508:704;4235:322:66;4286:8;4325:61;4359:17;4379:6;4325:25;:61::i;:::-;4398:33;;;;;:15;4414:8;5907:55:126;;4398:33:66;;;5889:74:126;5979:18;;;5972:34;;;4306:82:66;;-1:-1:-1;4398:15:66;;;;;;5862:18:126;;4398:33:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4441:30:66;;;;;:24;657:55:126;;;4441:30:66;;;639:74:126;4441:8:66;:24;;-1:-1:-1;4441:24:66;;-1:-1:-1;612:18:126;;4441:30:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4535:4;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4486:64;;4516:4;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4486:64;;4509:4;4486:64;;;;;;;;;;;;4235:322;;;:::o;3723:369::-;3955:10;3985:27;3996:8;4006:5;3985:10;:27::i;:::-;3977:35;;4022:63;4037:5;4044:12;4058:8;4068:9;4079:5;;4022:14;:63::i;:::-;3723:369;;;;;;;;;:::o;5595:329::-;5801:8;5828:17;5838:6;5828:9;:17::i;:::-;5821:24;;5855:62;5870:4;5876:12;5890:8;5900:9;5911:5;;5855:14;:62::i;:::-;5595:329;;;;;;;;:::o;4814:162::-;4893:8;4920:17;4930:6;4920:9;:17::i;:::-;4913:24;;4947:22;4955:4;4961:7;4947;:22::i;2808:194::-;2905:10;2935:27;2946:8;2956:5;2935:10;:27::i;:::-;2927:35;;2972:23;2980:5;2987:7;2972;:23::i;:::-;2808:194;;;;;:::o;1848:550:22:-;1932:16;2000:4;1994:11;2030:66;2025:3;2018:79;2143:14;2137:4;2133:25;2126:4;2121:3;2117:14;2110:49;2195:66;2188:4;2183:3;2179:14;2172:90;2309:4;2303;2298:3;2295:1;2287:27;2275:39;-1:-1:-1;;2341:22:22;;;2333:58;;;;;;;6475:2:126;2333:58:22;;;6457:21:126;6514:2;6494:18;;;6487:30;6553:25;6533:18;;;6526:53;6596:18;;2333:58:22;;;;;;;;7540:548:66;7734:27;;;821:42;7734:27;7730:260;;7777:70;:32;;;7810:10;7830:4;7837:9;7777:32;:70::i;:::-;7861:48;:27;;;7897:7;7907:1;7861:27;:48::i;:::-;7923:56;:27;;;7959:7;7969:9;7923:27;:56::i;:::-;8000:81;;;;;:21;;;;;;8029:9;;8000:81;;8040:12;;8054:8;;8064:9;;8075:5;;;;8000:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7540:548;;;;;;:::o;7121:321::-;7334:65;:26;:9;:26;7361:10;7381:7;7391;7334:26;:65::i;:::-;7409:7;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7121:321;;:::o;1279:1218:42:-;1417:15;1547:4;1541:11;1664:66;1645:17;1638:93;1825:42;1819:4;1815:53;1811:1;1792:17;1788:25;1781:88;1965:42;1961:2;1957:51;1952:2;1933:17;1929:26;1922:87;2095:6;2090:2;2071:17;2067:26;2060:42;2391:1;2388;2383:3;2364:17;2361:1;2354:5;2347;2342:51;2328:65;;;2421:44;2454:10;2421:32;:44::i;:::-;2413:77;;;;;;;7598:2:126;2413:77:42;;;7580:21:126;7637:2;7617:18;;;7610:30;7676:22;7656:18;;;7649:50;7716:18;;2413:77:42;7396:344:126;2413:77:42;1407:1090;1279:1218;;;;:::o;3552:1041::-;3663:15;3793:4;3787:11;3910:66;3891:17;3884:93;4069:42;4065:2;4061:51;4057:1;4038:17;4034:25;4027:86;4199:6;4194:2;4175:17;4171:26;4164:42;4493:1;4490;4486:2;4467:17;4464:1;4457:5;4450;4445:50;4431:64;;;4523:44;4556:10;4523:32;:44::i;:::-;4515:71;;;;;;;7947:2:126;4515:71:42;;;7929:21:126;7986:2;7966:18;;;7959:30;8025:16;8005:18;;;7998:44;8059:18;;4515:71:42;7745:338:126;4515:71:42;3653:940;3552:1041;;;:::o;4786:::-;4867:12;4989:16;5066:10;5056:238;;5173:14;5170:1;5167;5152:36;5265:14;5262:1;5255:25;5056:238;5315:14;5347:2;5342:242;;;;5597:96;;;;5796:1;5785:12;;5308:503;;5342:242;5442:14;5439:1;5436;5421:36;5566:1;5560:8;5553:16;5546:24;5535:35;;5342:242;;5597:96;5678:1;5667:12;;5308:503;;;4786:1041;;;:::o;14:154:126:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:315::-;241:6;249;302:2;290:9;281:7;277:23;273:32;270:52;;;318:1;315;308:12;270:52;357:9;344:23;376:31;401:5;376:31;:::i;:::-;426:5;478:2;463:18;;;;450:32;;-1:-1:-1;;;173:315:126:o;1478:180::-;1537:6;1590:2;1578:9;1569:7;1565:23;1561:32;1558:52;;;1606:1;1603;1596:12;1558:52;-1:-1:-1;1629:23:126;;1478:180;-1:-1:-1;1478:180:126:o;1663:347::-;1714:8;1724:6;1778:3;1771:4;1763:6;1759:17;1755:27;1745:55;;1796:1;1793;1786:12;1745:55;-1:-1:-1;1819:20:126;;1862:18;1851:30;;1848:50;;;1894:1;1891;1884:12;1848:50;1931:4;1923:6;1919:17;1907:29;;1983:3;1976:4;1967:6;1959;1955:19;1951:30;1948:39;1945:59;;;2000:1;1997;1990:12;1945:59;1663:347;;;;;:::o;2015:987::-;2152:6;2160;2168;2176;2184;2192;2200;2253:3;2241:9;2232:7;2228:23;2224:33;2221:53;;;2270:1;2267;2260:12;2221:53;2309:9;2296:23;2328:31;2353:5;2328:31;:::i;:::-;2378:5;-1:-1:-1;2430:2:126;2415:18;;2402:32;;-1:-1:-1;2486:2:126;2471:18;;2458:32;2499:33;2458:32;2499:33;:::i;:::-;2551:7;-1:-1:-1;2610:2:126;2595:18;;2582:32;2623:33;2582:32;2623:33;:::i;:::-;2675:7;-1:-1:-1;2729:3:126;2714:19;;2701:33;;-1:-1:-1;2785:3:126;2770:19;;2757:33;2813:18;2802:30;;2799:50;;;2845:1;2842;2835:12;2799:50;2884:58;2934:7;2925:6;2914:9;2910:22;2884:58;:::i;:::-;2015:987;;;;-1:-1:-1;2015:987:126;;-1:-1:-1;2015:987:126;;;;2858:84;;-1:-1:-1;;;2015:987:126:o;3007:845::-;3135:6;3143;3151;3159;3167;3175;3228:3;3216:9;3207:7;3203:23;3199:33;3196:53;;;3245:1;3242;3235:12;3196:53;3281:9;3268:23;3258:33;;3341:2;3330:9;3326:18;3313:32;3354:31;3379:5;3354:31;:::i;:::-;3404:5;-1:-1:-1;3461:2:126;3446:18;;3433:32;3474:33;3433:32;3474:33;:::i;:::-;3526:7;-1:-1:-1;3580:2:126;3565:18;;3552:32;;-1:-1:-1;3635:3:126;3620:19;;3607:33;3663:18;3652:30;;3649:50;;;3695:1;3692;3685:12;3649:50;3734:58;3784:7;3775:6;3764:9;3760:22;3734:58;:::i;:::-;3007:845;;;;-1:-1:-1;3007:845:126;;-1:-1:-1;3007:845:126;;3811:8;;3007:845;-1:-1:-1;;;3007:845:126:o;4103:248::-;4171:6;4179;4232:2;4220:9;4211:7;4207:23;4203:32;4200:52;;;4248:1;4245;4238:12;4200:52;-1:-1:-1;;4271:23:126;;;4341:2;4326:18;;;4313:32;;-1:-1:-1;4103:248:126:o;4356:383::-;4433:6;4441;4449;4502:2;4490:9;4481:7;4477:23;4473:32;4470:52;;;4518:1;4515;4508:12;4470:52;4557:9;4544:23;4576:31;4601:5;4576:31;:::i;:::-;4626:5;4678:2;4663:18;;4650:32;;-1:-1:-1;4729:2:126;4714:18;;;4701:32;;4356:383;-1:-1:-1;;;4356:383:126:o;5419:273::-;5487:6;5540:2;5528:9;5519:7;5515:23;5511:32;5508:52;;;5556:1;5553;5546:12;5508:52;5588:9;5582:16;5638:4;5631:5;5627:16;5620:5;5617:27;5607:55;;5658:1;5655;5648:12;6017:251;6087:6;6140:2;6128:9;6119:7;6115:23;6111:32;6108:52;;;6156:1;6153;6146:12;6108:52;6188:9;6182:16;6207:31;6232:5;6207:31;:::i;6625:766::-;6851:4;6880:42;6961:2;6953:6;6949:15;6938:9;6931:34;7013:2;7005:6;7001:15;6996:2;6985:9;6981:18;6974:43;;7053:6;7048:2;7037:9;7033:18;7026:34;7096:3;7091:2;7080:9;7076:18;7069:31;7137:6;7131:3;7120:9;7116:19;7109:35;7195:6;7187;7181:3;7170:9;7166:19;7153:49;7252:1;7246:3;7237:6;7226:9;7222:22;7218:32;7211:43;7381:3;7311:66;7306:2;7298:6;7294:15;7290:88;7279:9;7275:104;7271:114;7263:122;;6625:766;;;;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "36596": [
        {
          "start": 442,
          "length": 32
        },
        {
          "start": 1166,
          "length": 32
        },
        {
          "start": 1345,
          "length": 32
        },
        {
          "start": 1910,
          "length": 32
        },
        {
          "start": 2088,
          "length": 32
        }
      ],
      "37809": [
        {
          "start": 390,
          "length": 32
        },
        {
          "start": 1656,
          "length": 32
        },
        {
          "start": 1812,
          "length": 32
        }
      ],
      "37813": [
        {
          "start": 306,
          "length": 32
        },
        {
          "start": 797,
          "length": 32
        },
        {
          "start": 1043,
          "length": 32
        }
      ],
      "37817": [
        {
          "start": 636,
          "length": 32
        },
        {
          "start": 3184,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ETH_PLACEHOLDER()": "c45e15a0",
    "baseToken()": "c55dae63",
    "computeFundAddress(address,bytes32)": "099a81e3",
    "computeOrgAddress(bytes32)": "9fb8578d",
    "deployFund(address,bytes32)": "2a4004b8",
    "deployFundAndDonate(address,bytes32,uint256)": "e6be99fc",
    "deployFundSwapAndDonate(address,bytes32,address,address,uint256,bytes)": "ab438d6b",
    "deployOrg(bytes32)": "a60fe71d",
    "deployOrgAndDonate(bytes32,uint256)": "db9e30cc",
    "deployOrgSwapAndDonate(bytes32,address,address,uint256,bytes)": "bf37a670",
    "fundImplementation()": "0b307674",
    "orgImplementation()": "6fee7ed6",
    "registry()": "7b103999"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Registry\",\"name\":\"_registry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"entity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"entityType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"entityManager\",\"type\":\"address\"}],\"name\":\"EntityDeployed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ETH_PLACEHOLDER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"computeFundAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orgId\",\"type\":\"bytes32\"}],\"name\":\"computeOrgAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deployFund\",\"outputs\":[{\"internalType\":\"contract Fund\",\"name\":\"_fund\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deployFundAndDonate\",\"outputs\":[{\"internalType\":\"contract Fund\",\"name\":\"_fund\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISwapWrapper\",\"name\":\"_swapWrapper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"deployFundSwapAndDonate\",\"outputs\":[{\"internalType\":\"contract Fund\",\"name\":\"_fund\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orgId\",\"type\":\"bytes32\"}],\"name\":\"deployOrg\",\"outputs\":[{\"internalType\":\"contract Org\",\"name\":\"_org\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orgId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deployOrgAndDonate\",\"outputs\":[{\"internalType\":\"contract Org\",\"name\":\"_org\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orgId\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISwapWrapper\",\"name\":\"_swapWrapper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"deployOrgSwapAndDonate\",\"outputs\":[{\"internalType\":\"contract Org\",\"name\":\"_org\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundImplementation\",\"outputs\":[{\"internalType\":\"contract Fund\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orgImplementation\",\"outputs\":[{\"internalType\":\"contract Org\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract Registry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"computeFundAddress(address,bytes32)\":{\"details\":\"This function is used off-chain by the automated tests to verify proper contract address deployment.\",\"params\":{\"_manager\":\"The manager of the fund.\",\"_salt\":\"A 32-byte value used to create the contract at a deterministic address.\"},\"returns\":{\"_0\":\"The Fund's deployment address.\"}},\"computeOrgAddress(bytes32)\":{\"details\":\"This function is used off-chain by the automated tests to verify proper contract address deployment.\",\"params\":{\"_orgId\":\"Org's tax ID.\"},\"returns\":{\"_0\":\"The Org's deployment address.\"}},\"constructor\":{\"params\":{\"_registry\":\"The Registry this factory will configure Entities to interact with. This factory must be approved on this Registry for it to work properly.\"}},\"deployFund(address,bytes32)\":{\"params\":{\"_manager\":\"The address of the Fund's manager.\",\"_salt\":\"A 32-byte value used to create the contract at a deterministic address.\"},\"returns\":{\"_fund\":\"The deployed Fund.\"}},\"deployFundAndDonate(address,bytes32,uint256)\":{\"params\":{\"_amount\":\"The amount of base token to donate.\",\"_manager\":\"The address of the Fund's manager.\",\"_salt\":\"A 32-byte value used to create the contract at a deterministic address.\"},\"returns\":{\"_fund\":\"The deployed Fund.\"}},\"deployFundSwapAndDonate(address,bytes32,address,address,uint256,bytes)\":{\"params\":{\"_amountIn\":\"The amount of tokens or ETH being swapped and donated.\",\"_data\":\"Additional call data required by the ISwapWrapper being used.\",\"_manager\":\"The address of the Fund's manager.\",\"_salt\":\"A 32-byte value used to create the contract at a deterministic address.\",\"_swapWrapper\":\"The swap wrapper to use for the donation. Must be whitelisted on the Registry.\",\"_tokenIn\":\"The address of the ERC20 token to swap and donate, or ETH_PLACEHOLDER if donating ETH.\"},\"returns\":{\"_fund\":\"The deployed Fund.\"}},\"deployOrg(bytes32)\":{\"params\":{\"_orgId\":\"The Org's ID for tax purposes.\"},\"returns\":{\"_org\":\"The deployed Org.\"}},\"deployOrgAndDonate(bytes32,uint256)\":{\"params\":{\"_amount\":\"The amount of base token to donate.\",\"_orgId\":\"The Org's ID for tax purposes.\"},\"returns\":{\"_org\":\"The deployed Org.\"}},\"deployOrgSwapAndDonate(bytes32,address,address,uint256,bytes)\":{\"params\":{\"_amountIn\":\"The amount of tokens or ETH being swapped and donated.\",\"_data\":\"Additional call data required by the ISwapWrapper being used.\",\"_orgId\":\"The Org's ID for tax purposes.\",\"_swapWrapper\":\"The swap wrapper to use for the donation. Must be whitelisted on the Registry.\",\"_tokenIn\":\"The address of the ERC20 token to swap and donate, or ETH_PLACEHOLDER if donating ETH.\"},\"returns\":{\"_org\":\"The deployed Org.\"}}},\"stateVariables\":{\"fundImplementation\":{\"details\":\"The concrete Fund used for minimal proxy deployment.\"},\"orgImplementation\":{\"details\":\"The concrete Org used for minimal proxy deployment.\"}},\"version\":1},\"userdoc\":{\"events\":{\"EntityDeployed(address,uint8,address)\":{\"notice\":\"Emitted when an Entity is deployed.\"}},\"kind\":\"user\",\"methods\":{\"ETH_PLACEHOLDER()\":{\"notice\":\"Placeholder address used in swapping method to denote usage of ETH instead of a token.\"},\"baseToken()\":{\"notice\":\"Base Token address is the stable coin used throughout the system.\"},\"computeFundAddress(address,bytes32)\":{\"notice\":\"Calculates a Fund contract's deployment address.\"},\"computeOrgAddress(bytes32)\":{\"notice\":\"Calculates an Org contract's deployment address.\"},\"deployFund(address,bytes32)\":{\"notice\":\"Deploys a Fund.\"},\"deployFundAndDonate(address,bytes32,uint256)\":{\"notice\":\"Deploys a Fund then pulls base token from the sender and donates to it.\"},\"deployFundSwapAndDonate(address,bytes32,address,address,uint256,bytes)\":{\"notice\":\"Deploys a new Fund, then pulls a ETH or ERC20 tokens, swaps them to base tokens, and donates to the new Fund.\"},\"deployOrg(bytes32)\":{\"notice\":\"Deploys an Org.\"},\"deployOrgAndDonate(bytes32,uint256)\":{\"notice\":\"Deploys an Org then pulls base token from the sender and donates to it.\"},\"deployOrgSwapAndDonate(bytes32,address,address,uint256,bytes)\":{\"notice\":\"Deploys a new Org, then pulls a ETH or ERC20 tokens, swaps them to base tokens, and donates to the new Org.\"},\"registry()\":{\"notice\":\"_registry The registry to host the Entity.\"}},\"notice\":\"This contract is the factory for both the Org and Fund objects.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/OrgFundFactory.sol\":\"OrgFundFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999999},\"remappings\":[\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/solmate/lib/weird-erc20/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x4413f86457f0ff24f7bc4cc94d296e822036203a8c90f565d6614f71d54add05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c7085025ed06e48a1c45b18499fdf6f2c1fdaeff1009e27174f7859a91af183\",\"dweb:/ipfs/QmTEMcuRneWqcPLtRqBpyqwHrmoPThfsEoo9mz1hjYcYFB\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://49a39e71d6bde571d04722c90fd42591af806d29d8cbd4cd96f35e443702d899\",\"dweb:/ipfs/QmefLxMt6w2it9daQQFdBTtPeCWDhSqhNWuxQy8e7WrNVr\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xcc39d0f5693925ea1e8c517f7cc24211a9899c83a57e62d806180cdb056b6b75\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a18e34690286eeb9d24e4913b8bb2e437fde3273d955b0ea06db6394244248ed\",\"dweb:/ipfs/QmYokhGtqtWP6Me7Z5hifWXBBBFcfr2EHNWSRCFmr9eZ7S\"]},\"src/Entity.sol\":{\"keccak256\":\"0x1a66134c4745c68248166e0f209fc440edddc1e2c6a9e459762d2f2148e1ccac\",\"license\":\"BSD 3-Clause\",\"urls\":[\"bzz-raw://8c4e93e4b42e1b330ed0930dd37df9f7a19ddc43fe7e2dd1386da8967ff527c7\",\"dweb:/ipfs/QmWwVFwrkoVBRGWKqjo7sQ7NTaozJyTKd3d2ttCvF48m2X\"]},\"src/EntityFactory.sol\":{\"keccak256\":\"0x65a2bab18cf5bea72b3f3deb4f2c70c1e178bec792b81d077c3c70b011a0566c\",\"license\":\"BSD 3-Clause\",\"urls\":[\"bzz-raw://5d8d3d3f93a561c4799f7d702c870766de973679e882af66b5def99a5a645463\",\"dweb:/ipfs/QmP7LmSYGLs7cq8MpfdWFpZwToZzz6s1X88ayW5EURCmnG\"]},\"src/Fund.sol\":{\"keccak256\":\"0x7b5e239a94bb988769d51dffe89f0f9da9faf8bce03dbe5ad059b06f4dd0b740\",\"license\":\"BSD 3-Clause\",\"urls\":[\"bzz-raw://aab2714a91475c2107ac9fa5108774d46d1c43ea7f3deed9fbcd2e625990e2e4\",\"dweb:/ipfs/QmetsGjyPD44qKiW8u83givLTN7KkXTfcxDtbS6Yhn94Vf\"]},\"src/Org.sol\":{\"keccak256\":\"0x022054fa169e40b3e6732007b9cc60429c30e903f8513b73f77274d4d6d70d0f\",\"license\":\"BSD 3-Clause\",\"urls\":[\"bzz-raw://f11036edf7d9b77bef324ce8b4dd797930abf818e659af89587146bb43421f4a\",\"dweb:/ipfs/QmXoQfbhGofPwM982Nje8xaJC8z3BXQ4VxaytJV5mQ8PL9\"]},\"src/OrgFundFactory.sol\":{\"keccak256\":\"0x33dbc25f51505aa9f8e91b54c28e78d39a6fd11696deb1ddb159745460ecd9e6\",\"license\":\"BSD 3-Clause\",\"urls\":[\"bzz-raw://35b2153af5866b4aac3bb9c7d02062ab116108127299f7c4595b12f95adcb4a0\",\"dweb:/ipfs/QmXay3YzowEbiCur2YyLKm6euxghBV4s7FsE5sRjQQjP8b\"]},\"src/Portfolio.sol\":{\"keccak256\":\"0x58cabf053779dc94a3cb8fd04ae0dd6688bc1c23a2bd36b0d77a5fd76705837d\",\"license\":\"BSD 3-Clause\",\"urls\":[\"bzz-raw://2efd85ab9295356af6e75f6ed4eb1e9496be6002ce7f71f4e6cc5482adaf57a9\",\"dweb:/ipfs/QmaghTnpwWo1CQg85CWD51unzcLx3tfEHhBeu1dV3wxwCV\"]},\"src/Registry.sol\":{\"keccak256\":\"0x7d1eba8dd04a28da747e99629f4f683af28cadd171b13a120efafac8bdaf8462\",\"license\":\"BSD 3-Clause\",\"urls\":[\"bzz-raw://139ce52c28d265dbf30bbd4f9db8e90b1020d23c896e315ff750a2bd7793b721\",\"dweb:/ipfs/QmfVW2gR4boPcbe3gMQToWrpzZMyojJAGva1WwKfrNnoFN\"]},\"src/RegistryAuth.sol\":{\"keccak256\":\"0x13cd1b2671f04f40f473c47b0678dea614e2139f9750f7eff3a1c7295ee78cfb\",\"license\":\"BSD 3-Clause\",\"urls\":[\"bzz-raw://fd543cd624f2b9e150ef883a1f6289b3292bda259ab6a1d06d9915cc7383f749\",\"dweb:/ipfs/QmVpfoYBEf5whA6bvJibsx4XGm1v5994fqsEd3fjF12zst\"]},\"src/interfaces/ISwapWrapper.sol\":{\"keccak256\":\"0x4e6a644965dcad1437f2b3a83719b6922e92bea139cf6096a03033b6fb8a7115\",\"license\":\"BSD 3-Clause\",\"urls\":[\"bzz-raw://f3c08296cdd868c4e96e072c88739bc6e4502891a3a023c667562bb0eb7fb838\",\"dweb:/ipfs/Qmexyo7QrRABCG1vjr7Xso9w4UVK2VcV16EKgZoRMqbL1y\"]},\"src/lib/Math.sol\":{\"keccak256\":\"0x054158b03edfab0f8b3ec53b60bdf9a97d28004b9d6a860f52c5a4d2e399bc9a\",\"license\":\"BSD 3-Clause\",\"urls\":[\"bzz-raw://9d893785bdcc815d4d90aa7e77a7606a02aa0488813210ddaad06e95acbfd16f\",\"dweb:/ipfs/QmdFhGE43dzsTgXXW4BVuMVS5i47cDm7zfqsrWE4jTx7zV\"]},\"src/lib/ReentrancyGuard.sol\":{\"keccak256\":\"0x8e7d6c10a4e817f9dae331ba968e74e409c116f6ca38b02fb71e23896785ca1c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://787838899095acb5116195fb3a8a57f13ab93c0d4f334d6eea10d310b5dfdd2b\",\"dweb:/ipfs/QmVeUzpn4i6xAQv9zVGFvXUuvANawPaSJheoKwtceGhTWT\"]},\"src/lib/auth/Auth.sol\":{\"keccak256\":\"0x89c10045965b99d5f4e6252ec418bd1b5b87964d08b0c2d08ea2b27905c5a447\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d055922026ee1bd91a891501466e347f6833dbf09e54a5cfb88fbad650926a7e\",\"dweb:/ipfs/QmTZv3kmkeGjqJyTb3juLwETdtwPj2N4Pwwo4M6BXQCEHp\"]},\"src/lib/auth/EndaomentAuth.sol\":{\"keccak256\":\"0xf31e9f2b3f8c369cba810e64ffecf3c51f10217d795c80619ef62e8b20cc8321\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://41b8bc7b139e89525e709a61010e5a1b26769d2264ca96f6cab2c4555f5e09b5\",\"dweb:/ipfs/QmVv5r9yBM1tBoCJp6B7w7U1Ewe86MvoY5qkXyNRoEHba1\"]},\"src/lib/auth/authorities/RolesAuthority.sol\":{\"keccak256\":\"0x0dea3c13efa7228619181a193194df188f5122c2fa817faf308dff68fcd04dda\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://75b8c5e292043817c548ad19414a4d10deb3cc9573f44f9455b48efe805c2ed8\",\"dweb:/ipfs/QmVkeHMNSYU2gDf41K6AsfPhw3cGzfu3pfKr8anEKiMFbT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract Registry",
              "name": "_registry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "entity",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint8",
              "name": "entityType",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "entityManager",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "EntityDeployed",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ETH_PLACEHOLDER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseToken",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_manager",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_salt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "computeFundAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_orgId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "computeOrgAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_manager",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_salt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployFund",
          "outputs": [
            {
              "internalType": "contract Fund",
              "name": "_fund",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_manager",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployFundAndDonate",
          "outputs": [
            {
              "internalType": "contract Fund",
              "name": "_fund",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_manager",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_salt",
              "type": "bytes32"
            },
            {
              "internalType": "contract ISwapWrapper",
              "name": "_swapWrapper",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_tokenIn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amountIn",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deployFundSwapAndDonate",
          "outputs": [
            {
              "internalType": "contract Fund",
              "name": "_fund",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_orgId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployOrg",
          "outputs": [
            {
              "internalType": "contract Org",
              "name": "_org",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_orgId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployOrgAndDonate",
          "outputs": [
            {
              "internalType": "contract Org",
              "name": "_org",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_orgId",
              "type": "bytes32"
            },
            {
              "internalType": "contract ISwapWrapper",
              "name": "_swapWrapper",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_tokenIn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amountIn",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deployOrgSwapAndDonate",
          "outputs": [
            {
              "internalType": "contract Org",
              "name": "_org",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fundImplementation",
          "outputs": [
            {
              "internalType": "contract Fund",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "orgImplementation",
          "outputs": [
            {
              "internalType": "contract Org",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "registry",
          "outputs": [
            {
              "internalType": "contract Registry",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "computeFundAddress(address,bytes32)": {
            "details": "This function is used off-chain by the automated tests to verify proper contract address deployment.",
            "params": {
              "_manager": "The manager of the fund.",
              "_salt": "A 32-byte value used to create the contract at a deterministic address."
            },
            "returns": {
              "_0": "The Fund's deployment address."
            }
          },
          "computeOrgAddress(bytes32)": {
            "details": "This function is used off-chain by the automated tests to verify proper contract address deployment.",
            "params": {
              "_orgId": "Org's tax ID."
            },
            "returns": {
              "_0": "The Org's deployment address."
            }
          },
          "constructor": {
            "params": {
              "_registry": "The Registry this factory will configure Entities to interact with. This factory must be approved on this Registry for it to work properly."
            }
          },
          "deployFund(address,bytes32)": {
            "params": {
              "_manager": "The address of the Fund's manager.",
              "_salt": "A 32-byte value used to create the contract at a deterministic address."
            },
            "returns": {
              "_fund": "The deployed Fund."
            }
          },
          "deployFundAndDonate(address,bytes32,uint256)": {
            "params": {
              "_amount": "The amount of base token to donate.",
              "_manager": "The address of the Fund's manager.",
              "_salt": "A 32-byte value used to create the contract at a deterministic address."
            },
            "returns": {
              "_fund": "The deployed Fund."
            }
          },
          "deployFundSwapAndDonate(address,bytes32,address,address,uint256,bytes)": {
            "params": {
              "_amountIn": "The amount of tokens or ETH being swapped and donated.",
              "_data": "Additional call data required by the ISwapWrapper being used.",
              "_manager": "The address of the Fund's manager.",
              "_salt": "A 32-byte value used to create the contract at a deterministic address.",
              "_swapWrapper": "The swap wrapper to use for the donation. Must be whitelisted on the Registry.",
              "_tokenIn": "The address of the ERC20 token to swap and donate, or ETH_PLACEHOLDER if donating ETH."
            },
            "returns": {
              "_fund": "The deployed Fund."
            }
          },
          "deployOrg(bytes32)": {
            "params": {
              "_orgId": "The Org's ID for tax purposes."
            },
            "returns": {
              "_org": "The deployed Org."
            }
          },
          "deployOrgAndDonate(bytes32,uint256)": {
            "params": {
              "_amount": "The amount of base token to donate.",
              "_orgId": "The Org's ID for tax purposes."
            },
            "returns": {
              "_org": "The deployed Org."
            }
          },
          "deployOrgSwapAndDonate(bytes32,address,address,uint256,bytes)": {
            "params": {
              "_amountIn": "The amount of tokens or ETH being swapped and donated.",
              "_data": "Additional call data required by the ISwapWrapper being used.",
              "_orgId": "The Org's ID for tax purposes.",
              "_swapWrapper": "The swap wrapper to use for the donation. Must be whitelisted on the Registry.",
              "_tokenIn": "The address of the ERC20 token to swap and donate, or ETH_PLACEHOLDER if donating ETH."
            },
            "returns": {
              "_org": "The deployed Org."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ETH_PLACEHOLDER()": {
            "notice": "Placeholder address used in swapping method to denote usage of ETH instead of a token."
          },
          "baseToken()": {
            "notice": "Base Token address is the stable coin used throughout the system."
          },
          "computeFundAddress(address,bytes32)": {
            "notice": "Calculates a Fund contract's deployment address."
          },
          "computeOrgAddress(bytes32)": {
            "notice": "Calculates an Org contract's deployment address."
          },
          "deployFund(address,bytes32)": {
            "notice": "Deploys a Fund."
          },
          "deployFundAndDonate(address,bytes32,uint256)": {
            "notice": "Deploys a Fund then pulls base token from the sender and donates to it."
          },
          "deployFundSwapAndDonate(address,bytes32,address,address,uint256,bytes)": {
            "notice": "Deploys a new Fund, then pulls a ETH or ERC20 tokens, swaps them to base tokens, and donates to the new Fund."
          },
          "deployOrg(bytes32)": {
            "notice": "Deploys an Org."
          },
          "deployOrgAndDonate(bytes32,uint256)": {
            "notice": "Deploys an Org then pulls base token from the sender and donates to it."
          },
          "deployOrgSwapAndDonate(bytes32,address,address,uint256,bytes)": {
            "notice": "Deploys a new Org, then pulls a ETH or ERC20 tokens, swaps them to base tokens, and donates to the new Org."
          },
          "registry()": {
            "notice": "_registry The registry to host the Entity."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/",
        ":weird-erc20/=lib/solmate/lib/weird-erc20/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 9999999
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/OrgFundFactory.sol": "OrgFundFactory"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0x4413f86457f0ff24f7bc4cc94d296e822036203a8c90f565d6614f71d54add05",
        "urls": [
          "bzz-raw://2c7085025ed06e48a1c45b18499fdf6f2c1fdaeff1009e27174f7859a91af183",
          "dweb:/ipfs/QmTEMcuRneWqcPLtRqBpyqwHrmoPThfsEoo9mz1hjYcYFB"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f",
        "urls": [
          "bzz-raw://49a39e71d6bde571d04722c90fd42591af806d29d8cbd4cd96f35e443702d899",
          "dweb:/ipfs/QmefLxMt6w2it9daQQFdBTtPeCWDhSqhNWuxQy8e7WrNVr"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0xcc39d0f5693925ea1e8c517f7cc24211a9899c83a57e62d806180cdb056b6b75",
        "urls": [
          "bzz-raw://a18e34690286eeb9d24e4913b8bb2e437fde3273d955b0ea06db6394244248ed",
          "dweb:/ipfs/QmYokhGtqtWP6Me7Z5hifWXBBBFcfr2EHNWSRCFmr9eZ7S"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Entity.sol": {
        "keccak256": "0x1a66134c4745c68248166e0f209fc440edddc1e2c6a9e459762d2f2148e1ccac",
        "urls": [
          "bzz-raw://8c4e93e4b42e1b330ed0930dd37df9f7a19ddc43fe7e2dd1386da8967ff527c7",
          "dweb:/ipfs/QmWwVFwrkoVBRGWKqjo7sQ7NTaozJyTKd3d2ttCvF48m2X"
        ],
        "license": "BSD 3-Clause"
      },
      "src/EntityFactory.sol": {
        "keccak256": "0x65a2bab18cf5bea72b3f3deb4f2c70c1e178bec792b81d077c3c70b011a0566c",
        "urls": [
          "bzz-raw://5d8d3d3f93a561c4799f7d702c870766de973679e882af66b5def99a5a645463",
          "dweb:/ipfs/QmP7LmSYGLs7cq8MpfdWFpZwToZzz6s1X88ayW5EURCmnG"
        ],
        "license": "BSD 3-Clause"
      },
      "src/Fund.sol": {
        "keccak256": "0x7b5e239a94bb988769d51dffe89f0f9da9faf8bce03dbe5ad059b06f4dd0b740",
        "urls": [
          "bzz-raw://aab2714a91475c2107ac9fa5108774d46d1c43ea7f3deed9fbcd2e625990e2e4",
          "dweb:/ipfs/QmetsGjyPD44qKiW8u83givLTN7KkXTfcxDtbS6Yhn94Vf"
        ],
        "license": "BSD 3-Clause"
      },
      "src/Org.sol": {
        "keccak256": "0x022054fa169e40b3e6732007b9cc60429c30e903f8513b73f77274d4d6d70d0f",
        "urls": [
          "bzz-raw://f11036edf7d9b77bef324ce8b4dd797930abf818e659af89587146bb43421f4a",
          "dweb:/ipfs/QmXoQfbhGofPwM982Nje8xaJC8z3BXQ4VxaytJV5mQ8PL9"
        ],
        "license": "BSD 3-Clause"
      },
      "src/OrgFundFactory.sol": {
        "keccak256": "0x33dbc25f51505aa9f8e91b54c28e78d39a6fd11696deb1ddb159745460ecd9e6",
        "urls": [
          "bzz-raw://35b2153af5866b4aac3bb9c7d02062ab116108127299f7c4595b12f95adcb4a0",
          "dweb:/ipfs/QmXay3YzowEbiCur2YyLKm6euxghBV4s7FsE5sRjQQjP8b"
        ],
        "license": "BSD 3-Clause"
      },
      "src/Portfolio.sol": {
        "keccak256": "0x58cabf053779dc94a3cb8fd04ae0dd6688bc1c23a2bd36b0d77a5fd76705837d",
        "urls": [
          "bzz-raw://2efd85ab9295356af6e75f6ed4eb1e9496be6002ce7f71f4e6cc5482adaf57a9",
          "dweb:/ipfs/QmaghTnpwWo1CQg85CWD51unzcLx3tfEHhBeu1dV3wxwCV"
        ],
        "license": "BSD 3-Clause"
      },
      "src/Registry.sol": {
        "keccak256": "0x7d1eba8dd04a28da747e99629f4f683af28cadd171b13a120efafac8bdaf8462",
        "urls": [
          "bzz-raw://139ce52c28d265dbf30bbd4f9db8e90b1020d23c896e315ff750a2bd7793b721",
          "dweb:/ipfs/QmfVW2gR4boPcbe3gMQToWrpzZMyojJAGva1WwKfrNnoFN"
        ],
        "license": "BSD 3-Clause"
      },
      "src/RegistryAuth.sol": {
        "keccak256": "0x13cd1b2671f04f40f473c47b0678dea614e2139f9750f7eff3a1c7295ee78cfb",
        "urls": [
          "bzz-raw://fd543cd624f2b9e150ef883a1f6289b3292bda259ab6a1d06d9915cc7383f749",
          "dweb:/ipfs/QmVpfoYBEf5whA6bvJibsx4XGm1v5994fqsEd3fjF12zst"
        ],
        "license": "BSD 3-Clause"
      },
      "src/interfaces/ISwapWrapper.sol": {
        "keccak256": "0x4e6a644965dcad1437f2b3a83719b6922e92bea139cf6096a03033b6fb8a7115",
        "urls": [
          "bzz-raw://f3c08296cdd868c4e96e072c88739bc6e4502891a3a023c667562bb0eb7fb838",
          "dweb:/ipfs/Qmexyo7QrRABCG1vjr7Xso9w4UVK2VcV16EKgZoRMqbL1y"
        ],
        "license": "BSD 3-Clause"
      },
      "src/lib/Math.sol": {
        "keccak256": "0x054158b03edfab0f8b3ec53b60bdf9a97d28004b9d6a860f52c5a4d2e399bc9a",
        "urls": [
          "bzz-raw://9d893785bdcc815d4d90aa7e77a7606a02aa0488813210ddaad06e95acbfd16f",
          "dweb:/ipfs/QmdFhGE43dzsTgXXW4BVuMVS5i47cDm7zfqsrWE4jTx7zV"
        ],
        "license": "BSD 3-Clause"
      },
      "src/lib/ReentrancyGuard.sol": {
        "keccak256": "0x8e7d6c10a4e817f9dae331ba968e74e409c116f6ca38b02fb71e23896785ca1c",
        "urls": [
          "bzz-raw://787838899095acb5116195fb3a8a57f13ab93c0d4f334d6eea10d310b5dfdd2b",
          "dweb:/ipfs/QmVeUzpn4i6xAQv9zVGFvXUuvANawPaSJheoKwtceGhTWT"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/lib/auth/Auth.sol": {
        "keccak256": "0x89c10045965b99d5f4e6252ec418bd1b5b87964d08b0c2d08ea2b27905c5a447",
        "urls": [
          "bzz-raw://d055922026ee1bd91a891501466e347f6833dbf09e54a5cfb88fbad650926a7e",
          "dweb:/ipfs/QmTZv3kmkeGjqJyTb3juLwETdtwPj2N4Pwwo4M6BXQCEHp"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/lib/auth/EndaomentAuth.sol": {
        "keccak256": "0xf31e9f2b3f8c369cba810e64ffecf3c51f10217d795c80619ef62e8b20cc8321",
        "urls": [
          "bzz-raw://41b8bc7b139e89525e709a61010e5a1b26769d2264ca96f6cab2c4555f5e09b5",
          "dweb:/ipfs/QmVv5r9yBM1tBoCJp6B7w7U1Ewe86MvoY5qkXyNRoEHba1"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/lib/auth/authorities/RolesAuthority.sol": {
        "keccak256": "0x0dea3c13efa7228619181a193194df188f5122c2fa817faf308dff68fcd04dda",
        "urls": [
          "bzz-raw://75b8c5e292043817c548ad19414a4d10deb3cc9573f44f9455b48efe805c2ed8",
          "dweb:/ipfs/QmVkeHMNSYU2gDf41K6AsfPhw3cGzfu3pfKr8anEKiMFbT"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/OrgFundFactory.sol",
    "id": 38254,
    "exportedSymbols": {
      "Clones": [
        29396
      ],
      "ERC20": [
        33443
      ],
      "Entity": [
        36587
      ],
      "EntityFactory": [
        36618
      ],
      "Fund": [
        36653
      ],
      "ISwapWrapper": [
        40947
      ],
      "Org": [
        37774
      ],
      "OrgFundFactory": [
        38253
      ],
      "Registry": [
        39548
      ],
      "SafeTransferLib": [
        33543
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:8051:66",
    "nodes": [
      {
        "id": 37776,
        "nodeType": "PragmaDirective",
        "src": "40:23:66",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 37778,
        "nodeType": "ImportDirective",
        "src": "65:73:66",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "file": "openzeppelin-contracts/contracts/proxy/Clones.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38254,
        "sourceUnit": 29397,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37777,
              "name": "Clones",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29396,
              "src": "73:6:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37780,
        "nodeType": "ImportDirective",
        "src": "139:47:66",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38254,
        "sourceUnit": 33444,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37779,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33443,
              "src": "147:5:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37782,
        "nodeType": "ImportDirective",
        "src": "187:66:66",
        "nodes": [],
        "absolutePath": "lib/solmate/src/utils/SafeTransferLib.sol",
        "file": "solmate/utils/SafeTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38254,
        "sourceUnit": 33544,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37781,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33543,
              "src": "195:15:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37784,
        "nodeType": "ImportDirective",
        "src": "254:40:66",
        "nodes": [],
        "absolutePath": "src/Registry.sol",
        "file": "./Registry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38254,
        "sourceUnit": 39549,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37783,
              "name": "Registry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39548,
              "src": "262:8:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37786,
        "nodeType": "ImportDirective",
        "src": "295:50:66",
        "nodes": [],
        "absolutePath": "src/EntityFactory.sol",
        "file": "./EntityFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38254,
        "sourceUnit": 36619,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37785,
              "name": "EntityFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36618,
              "src": "303:13:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37788,
        "nodeType": "ImportDirective",
        "src": "346:36:66",
        "nodes": [],
        "absolutePath": "src/Entity.sol",
        "file": "./Entity.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38254,
        "sourceUnit": 36588,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37787,
              "name": "Entity",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36587,
              "src": "354:6:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37790,
        "nodeType": "ImportDirective",
        "src": "383:30:66",
        "nodes": [],
        "absolutePath": "src/Org.sol",
        "file": "./Org.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38254,
        "sourceUnit": 37775,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37789,
              "name": "Org",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37774,
              "src": "391:3:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37792,
        "nodeType": "ImportDirective",
        "src": "414:32:66",
        "nodes": [],
        "absolutePath": "src/Fund.sol",
        "file": "./Fund.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38254,
        "sourceUnit": 36654,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37791,
              "name": "Fund",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36653,
              "src": "422:4:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37794,
        "nodeType": "ImportDirective",
        "src": "447:59:66",
        "nodes": [],
        "absolutePath": "src/interfaces/ISwapWrapper.sol",
        "file": "./interfaces/ISwapWrapper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38254,
        "sourceUnit": 40948,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37793,
              "name": "ISwapWrapper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40947,
              "src": "455:12:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38253,
        "nodeType": "ContractDefinition",
        "src": "591:7499:66",
        "nodes": [
          {
            "id": 37801,
            "nodeType": "UsingForDirective",
            "src": "638:32:66",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 37798,
              "name": "SafeTransferLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33543,
              "src": "644:15:66"
            },
            "typeName": {
              "id": 37800,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37799,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33443,
                "src": "664:5:66"
              },
              "referencedDeclaration": 33443,
              "src": "664:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$33443",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 37805,
            "nodeType": "VariableDeclaration",
            "src": "779:84:66",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 37802,
              "nodeType": "StructuredDocumentation",
              "src": "676:98:66",
              "text": "@notice Placeholder address used in swapping method to denote usage of ETH instead of a token."
            },
            "functionSelector": "c45e15a0",
            "mutability": "constant",
            "name": "ETH_PLACEHOLDER",
            "nameLocation": "803:15:66",
            "scope": 38253,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 37803,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "779:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
              "id": 37804,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "821:42:66",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
            },
            "visibility": "public"
          },
          {
            "id": 37809,
            "nodeType": "VariableDeclaration",
            "src": "935:38:66",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 37806,
              "nodeType": "StructuredDocumentation",
              "src": "870:60:66",
              "text": "@dev The concrete Org used for minimal proxy deployment."
            },
            "functionSelector": "6fee7ed6",
            "mutability": "immutable",
            "name": "orgImplementation",
            "nameLocation": "956:17:66",
            "scope": 38253,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Org_$37774",
              "typeString": "contract Org"
            },
            "typeName": {
              "id": 37808,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37807,
                "name": "Org",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 37774,
                "src": "935:3:66"
              },
              "referencedDeclaration": 37774,
              "src": "935:3:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Org_$37774",
                "typeString": "contract Org"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37813,
            "nodeType": "VariableDeclaration",
            "src": "1046:40:66",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 37810,
              "nodeType": "StructuredDocumentation",
              "src": "980:61:66",
              "text": "@dev The concrete Fund used for minimal proxy deployment."
            },
            "functionSelector": "0b307674",
            "mutability": "immutable",
            "name": "fundImplementation",
            "nameLocation": "1068:18:66",
            "scope": 38253,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Fund_$36653",
              "typeString": "contract Fund"
            },
            "typeName": {
              "id": 37812,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37811,
                "name": "Fund",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36653,
                "src": "1046:4:66"
              },
              "referencedDeclaration": 36653,
              "src": "1046:4:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Fund_$36653",
                "typeString": "contract Fund"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37817,
            "nodeType": "VariableDeclaration",
            "src": "1175:32:66",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 37814,
              "nodeType": "StructuredDocumentation",
              "src": "1093:77:66",
              "text": "@notice Base Token address is the stable coin used throughout the system."
            },
            "functionSelector": "c55dae63",
            "mutability": "immutable",
            "name": "baseToken",
            "nameLocation": "1198:9:66",
            "scope": 38253,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$33443",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 37816,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37815,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33443,
                "src": "1175:5:66"
              },
              "referencedDeclaration": 33443,
              "src": "1175:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$33443",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37868,
            "nodeType": "FunctionDefinition",
            "src": "1401:329:66",
            "nodes": [],
            "body": {
              "id": 37867,
              "nodeType": "Block",
              "src": "1458:272:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 37832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37827,
                      "name": "orgImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37809,
                      "src": "1468:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Org_$37774",
                        "typeString": "contract Org"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 37830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1488:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Org_$37774_$",
                          "typeString": "function () returns (contract Org)"
                        },
                        "typeName": {
                          "id": 37829,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 37828,
                            "name": "Org",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 37774,
                            "src": "1492:3:66"
                          },
                          "referencedDeclaration": 37774,
                          "src": "1492:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Org_$37774",
                            "typeString": "contract Org"
                          }
                        }
                      },
                      "id": 37831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1488:9:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Org_$37774",
                        "typeString": "contract Org"
                      }
                    },
                    "src": "1468:29:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Org_$37774",
                      "typeString": "contract Org"
                    }
                  },
                  "id": 37833,
                  "nodeType": "ExpressionStatement",
                  "src": "1468:29:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37837,
                        "name": "_registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37821,
                        "src": "1536:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Registry_$39548",
                          "typeString": "contract Registry"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "494d504c",
                            "id": 37840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1555:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_486287226df0757af294903da9bc1edb84c92006afe00d704a2e6e2aea90d6b8",
                              "typeString": "literal_string \"IMPL\""
                            },
                            "value": "IMPL"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_486287226df0757af294903da9bc1edb84c92006afe00d704a2e6e2aea90d6b8",
                              "typeString": "literal_string \"IMPL\""
                            }
                          ],
                          "id": 37839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1547:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 37838,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1547:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1547:15:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Registry_$39548",
                          "typeString": "contract Registry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 37834,
                        "name": "orgImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37809,
                        "src": "1507:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Org_$37774",
                          "typeString": "contract Org"
                        }
                      },
                      "id": 37836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37751,
                      "src": "1507:28:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Registry_$39548_$_t_bytes32_$returns$__$",
                        "typeString": "function (contract Registry,bytes32) external"
                      }
                    },
                    "id": 37842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:56:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37843,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:56:66"
                },
                {
                  "expression": {
                    "id": 37849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37844,
                      "name": "fundImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37813,
                      "src": "1587:18:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Fund_$36653",
                        "typeString": "contract Fund"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 37847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1608:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Fund_$36653_$",
                          "typeString": "function () returns (contract Fund)"
                        },
                        "typeName": {
                          "id": 37846,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 37845,
                            "name": "Fund",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 36653,
                            "src": "1612:4:66"
                          },
                          "referencedDeclaration": 36653,
                          "src": "1612:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Fund_$36653",
                            "typeString": "contract Fund"
                          }
                        }
                      },
                      "id": 37848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1608:10:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Fund_$36653",
                        "typeString": "contract Fund"
                      }
                    },
                    "src": "1587:31:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Fund_$36653",
                      "typeString": "contract Fund"
                    }
                  },
                  "id": 37850,
                  "nodeType": "ExpressionStatement",
                  "src": "1587:31:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37854,
                        "name": "_registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37821,
                        "src": "1658:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Registry_$39548",
                          "typeString": "contract Registry"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 37857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1677:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 37856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1669:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 37855,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1669:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1669:10:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Registry_$39548",
                          "typeString": "contract Registry"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 37851,
                        "name": "fundImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37813,
                        "src": "1628:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fund_$36653",
                          "typeString": "contract Fund"
                        }
                      },
                      "id": 37853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36642,
                      "src": "1628:29:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Registry_$39548_$_t_address_$returns$__$",
                        "typeString": "function (contract Registry,address) external"
                      }
                    },
                    "id": 37859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1628:52:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37860,
                  "nodeType": "ExpressionStatement",
                  "src": "1628:52:66"
                },
                {
                  "expression": {
                    "id": 37865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37861,
                      "name": "baseToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37817,
                      "src": "1690:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$33443",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 37862,
                          "name": "_registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37821,
                          "src": "1702:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Registry_$39548",
                            "typeString": "contract Registry"
                          }
                        },
                        "id": 37863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "baseToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38745,
                        "src": "1702:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$33443_$",
                          "typeString": "function () view external returns (contract ERC20)"
                        }
                      },
                      "id": 37864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1702:21:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$33443",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1690:33:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$33443",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 37866,
                  "nodeType": "ExpressionStatement",
                  "src": "1690:33:66"
                }
              ]
            },
            "documentation": {
              "id": 37818,
              "nodeType": "StructuredDocumentation",
              "src": "1214:182:66",
              "text": " @param _registry The Registry this factory will configure Entities to interact with. This factory must be\n approved on this Registry for it to work properly."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 37824,
                    "name": "_registry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37821,
                    "src": "1447:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Registry_$39548",
                      "typeString": "contract Registry"
                    }
                  }
                ],
                "id": 37825,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 37823,
                  "name": "EntityFactory",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36618,
                  "src": "1433:13:66"
                },
                "nodeType": "ModifierInvocation",
                "src": "1433:24:66"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 37822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37821,
                  "mutability": "mutable",
                  "name": "_registry",
                  "nameLocation": "1422:9:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 37868,
                  "src": "1413:18:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Registry_$39548",
                    "typeString": "contract Registry"
                  },
                  "typeName": {
                    "id": 37820,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37819,
                      "name": "Registry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39548,
                      "src": "1413:8:66"
                    },
                    "referencedDeclaration": 39548,
                    "src": "1413:8:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Registry_$39548",
                      "typeString": "contract Registry"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1412:20:66"
            },
            "returnParameters": {
              "id": 37826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1458:0:66"
            },
            "scope": 38253,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37930,
            "nodeType": "FunctionDefinition",
            "src": "1973:478:66",
            "nodes": [],
            "body": {
              "id": 37929,
              "nodeType": "Block",
              "src": "2054:397:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 37903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37879,
                      "name": "_fund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37877,
                      "src": "2064:5:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Fund_$36653",
                        "typeString": "contract Fund"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 37887,
                                      "name": "fundImplementation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 37813,
                                      "src": "2170:18:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Fund_$36653",
                                        "typeString": "contract Fund"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Fund_$36653",
                                        "typeString": "contract Fund"
                                      }
                                    ],
                                    "id": 37886,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2162:7:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 37885,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2162:7:66",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 37888,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2162:27:66",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 37895,
                                              "name": "_manager",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 37871,
                                              "src": "2222:8:66",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 37894,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "2214:7:66",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bytes20_$",
                                              "typeString": "type(bytes20)"
                                            },
                                            "typeName": {
                                              "id": 37893,
                                              "name": "bytes20",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "2214:7:66",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 37896,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2214:17:66",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes20",
                                            "typeString": "bytes20"
                                          }
                                        },
                                        {
                                          "id": 37897,
                                          "name": "_salt",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 37873,
                                          "src": "2233:5:66",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes20",
                                            "typeString": "bytes20"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 37891,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "2201:5:66",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                            "typeString": "type(bytes storage pointer)"
                                          },
                                          "typeName": {
                                            "id": 37890,
                                            "name": "bytes",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2201:5:66",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 37892,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "concat",
                                        "nodeType": "MemberAccess",
                                        "src": "2201:12:66",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 37898,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2201:38:66",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 37889,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "2191:9:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 37899,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2191:49:66",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 37883,
                                  "name": "Clones",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29396,
                                  "src": "2115:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Clones_$29396_$",
                                    "typeString": "type(library Clones)"
                                  }
                                },
                                "id": 37884,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cloneDeterministic",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 29361,
                                "src": "2115:25:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$",
                                  "typeString": "function (address,bytes32) returns (address)"
                                }
                              },
                              "id": 37900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2115:143:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 37882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2090:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 37881,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2090:8:66",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 37901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2090:182:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 37880,
                        "name": "Fund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36653,
                        "src": "2072:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Fund_$36653_$",
                          "typeString": "type(contract Fund)"
                        }
                      },
                      "id": 37902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2072:210:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Fund_$36653",
                        "typeString": "contract Fund"
                      }
                    },
                    "src": "2064:218:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Fund_$36653",
                      "typeString": "contract Fund"
                    }
                  },
                  "id": 37904,
                  "nodeType": "ExpressionStatement",
                  "src": "2064:218:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37908,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36596,
                        "src": "2309:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Registry_$39548",
                          "typeString": "contract Registry"
                        }
                      },
                      {
                        "id": 37909,
                        "name": "_manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37871,
                        "src": "2319:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Registry_$39548",
                          "typeString": "contract Registry"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 37905,
                        "name": "_fund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37877,
                        "src": "2292:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fund_$36653",
                          "typeString": "contract Fund"
                        }
                      },
                      "id": 37907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36642,
                      "src": "2292:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Registry_$39548_$_t_address_$returns$__$",
                        "typeString": "function (contract Registry,address) external"
                      }
                    },
                    "id": 37910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2292:36:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37911,
                  "nodeType": "ExpressionStatement",
                  "src": "2292:36:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37915,
                        "name": "_fund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37877,
                        "src": "2363:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fund_$36653",
                          "typeString": "contract Fund"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Fund_$36653",
                          "typeString": "contract Fund"
                        }
                      ],
                      "expression": {
                        "id": 37912,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36596,
                        "src": "2338:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Registry_$39548",
                          "typeString": "contract Registry"
                        }
                      },
                      "id": 37914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setEntityActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39090,
                      "src": "2338:24:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Entity_$36587_$returns$__$",
                        "typeString": "function (contract Entity) external"
                      }
                    },
                    "id": 37916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2338:31:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37917,
                  "nodeType": "ExpressionStatement",
                  "src": "2338:31:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 37921,
                            "name": "_fund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37877,
                            "src": "2407:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fund_$36653",
                              "typeString": "contract Fund"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Fund_$36653",
                              "typeString": "contract Fund"
                            }
                          ],
                          "id": 37920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2399:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 37919,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2399:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2399:14:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 37923,
                            "name": "_fund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37877,
                            "src": "2415:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fund_$36653",
                              "typeString": "contract Fund"
                            }
                          },
                          "id": 37924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "entityType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36652,
                          "src": "2415:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$__$returns$_t_uint8_$",
                            "typeString": "function () pure external returns (uint8)"
                          }
                        },
                        "id": 37925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2415:18:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 37926,
                        "name": "_manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37871,
                        "src": "2435:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37918,
                      "name": "EntityDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36605,
                      "src": "2384:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_address_$returns$__$",
                        "typeString": "function (address,uint8,address)"
                      }
                    },
                    "id": 37927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2384:60:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37928,
                  "nodeType": "EmitStatement",
                  "src": "2379:65:66"
                }
              ]
            },
            "documentation": {
              "id": 37869,
              "nodeType": "StructuredDocumentation",
              "src": "1736:232:66",
              "text": " @notice Deploys a Fund.\n @param _manager The address of the Fund's manager.\n @param _salt A 32-byte value used to create the contract at a deterministic address.\n @return _fund The deployed Fund."
            },
            "functionSelector": "2a4004b8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployFund",
            "nameLocation": "1982:10:66",
            "parameters": {
              "id": 37874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37871,
                  "mutability": "mutable",
                  "name": "_manager",
                  "nameLocation": "2001:8:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 37930,
                  "src": "1993:16:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1993:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37873,
                  "mutability": "mutable",
                  "name": "_salt",
                  "nameLocation": "2019:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 37930,
                  "src": "2011:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 37872,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2011:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1992:33:66"
            },
            "returnParameters": {
              "id": 37878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37877,
                  "mutability": "mutable",
                  "name": "_fund",
                  "nameLocation": "2047:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 37930,
                  "src": "2042:10:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Fund_$36653",
                    "typeString": "contract Fund"
                  },
                  "typeName": {
                    "id": 37876,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37875,
                      "name": "Fund",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36653,
                      "src": "2042:4:66"
                    },
                    "referencedDeclaration": 36653,
                    "src": "2042:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Fund_$36653",
                      "typeString": "contract Fund"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2041:12:66"
            },
            "scope": 38253,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37956,
            "nodeType": "FunctionDefinition",
            "src": "2808:194:66",
            "nodes": [],
            "body": {
              "id": 37955,
              "nodeType": "Block",
              "src": "2917:85:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 37948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37943,
                      "name": "_fund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37941,
                      "src": "2927:5:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Fund_$36653",
                        "typeString": "contract Fund"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 37945,
                          "name": "_manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37933,
                          "src": "2946:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 37946,
                          "name": "_salt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37935,
                          "src": "2956:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 37944,
                        "name": "deployFund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37930,
                        "src": "2935:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_contract$_Fund_$36653_$",
                          "typeString": "function (address,bytes32) returns (contract Fund)"
                        }
                      },
                      "id": 37947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2935:27:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Fund_$36653",
                        "typeString": "contract Fund"
                      }
                    },
                    "src": "2927:35:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Fund_$36653",
                      "typeString": "contract Fund"
                    }
                  },
                  "id": 37949,
                  "nodeType": "ExpressionStatement",
                  "src": "2927:35:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37951,
                        "name": "_fund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37941,
                        "src": "2980:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fund_$36653",
                          "typeString": "contract Fund"
                        }
                      },
                      {
                        "id": 37952,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37937,
                        "src": "2987:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Fund_$36653",
                          "typeString": "contract Fund"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37950,
                      "name": "_donate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38183,
                      "src": "2972:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Entity_$36587_$_t_uint256_$returns$__$",
                        "typeString": "function (contract Entity,uint256)"
                      }
                    },
                    "id": 37953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2972:23:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37954,
                  "nodeType": "ExpressionStatement",
                  "src": "2972:23:66"
                }
              ]
            },
            "documentation": {
              "id": 37931,
              "nodeType": "StructuredDocumentation",
              "src": "2457:346:66",
              "text": " @notice Deploys a Fund then pulls base token from the sender and donates to it.\n @param _manager The address of the Fund's manager.\n @param _salt A 32-byte value used to create the contract at a deterministic address.\n @param _amount The amount of base token to donate.\n @return _fund The deployed Fund."
            },
            "functionSelector": "e6be99fc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployFundAndDonate",
            "nameLocation": "2817:19:66",
            "parameters": {
              "id": 37938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37933,
                  "mutability": "mutable",
                  "name": "_manager",
                  "nameLocation": "2845:8:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 37956,
                  "src": "2837:16:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2837:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37935,
                  "mutability": "mutable",
                  "name": "_salt",
                  "nameLocation": "2863:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 37956,
                  "src": "2855:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 37934,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2855:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37937,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2878:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 37956,
                  "src": "2870:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2870:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2836:50:66"
            },
            "returnParameters": {
              "id": 37942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37941,
                  "mutability": "mutable",
                  "name": "_fund",
                  "nameLocation": "2910:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 37956,
                  "src": "2905:10:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Fund_$36653",
                    "typeString": "contract Fund"
                  },
                  "typeName": {
                    "id": 37940,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37939,
                      "name": "Fund",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36653,
                      "src": "2905:4:66"
                    },
                    "referencedDeclaration": 36653,
                    "src": "2905:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Fund_$36653",
                      "typeString": "contract Fund"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2904:12:66"
            },
            "scope": 38253,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37992,
            "nodeType": "FunctionDefinition",
            "src": "3723:369:66",
            "nodes": [],
            "body": {
              "id": 37991,
              "nodeType": "Block",
              "src": "3967:125:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 37981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37976,
                      "name": "_fund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37974,
                      "src": "3977:5:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Fund_$36653",
                        "typeString": "contract Fund"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 37978,
                          "name": "_manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37959,
                          "src": "3996:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 37979,
                          "name": "_salt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37961,
                          "src": "4006:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 37977,
                        "name": "deployFund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37930,
                        "src": "3985:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_contract$_Fund_$36653_$",
                          "typeString": "function (address,bytes32) returns (contract Fund)"
                        }
                      },
                      "id": 37980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3985:27:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Fund_$36653",
                        "typeString": "contract Fund"
                      }
                    },
                    "src": "3977:35:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Fund_$36653",
                      "typeString": "contract Fund"
                    }
                  },
                  "id": 37982,
                  "nodeType": "ExpressionStatement",
                  "src": "3977:35:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37984,
                        "name": "_fund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37974,
                        "src": "4037:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fund_$36653",
                          "typeString": "contract Fund"
                        }
                      },
                      {
                        "id": 37985,
                        "name": "_swapWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37964,
                        "src": "4044:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapWrapper_$40947",
                          "typeString": "contract ISwapWrapper"
                        }
                      },
                      {
                        "id": 37986,
                        "name": "_tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37966,
                        "src": "4058:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37987,
                        "name": "_amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37968,
                        "src": "4068:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 37988,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37970,
                        "src": "4079:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Fund_$36653",
                          "typeString": "contract Fund"
                        },
                        {
                          "typeIdentifier": "t_contract$_ISwapWrapper_$40947",
                          "typeString": "contract ISwapWrapper"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 37983,
                      "name": "_swapAndDonate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38252,
                      "src": "4022:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Entity_$36587_$_t_contract$_ISwapWrapper_$40947_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (contract Entity,contract ISwapWrapper,address,uint256,bytes calldata)"
                      }
                    },
                    "id": 37989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4022:63:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37990,
                  "nodeType": "ExpressionStatement",
                  "src": "4022:63:66"
                }
              ]
            },
            "documentation": {
              "id": 37957,
              "nodeType": "StructuredDocumentation",
              "src": "3008:710:66",
              "text": " @notice Deploys a new Fund, then pulls a ETH or ERC20 tokens, swaps them to base tokens,\n and donates to the new Fund.\n @param _manager The address of the Fund's manager.\n @param _salt A 32-byte value used to create the contract at a deterministic address.\n @param _swapWrapper The swap wrapper to use for the donation. Must be whitelisted on the Registry.\n @param _tokenIn The address of the ERC20 token to swap and donate, or ETH_PLACEHOLDER if donating ETH.\n @param _amountIn The amount of tokens or ETH being swapped and donated.\n @param _data Additional call data required by the ISwapWrapper being used.\n @return _fund The deployed Fund."
            },
            "functionSelector": "ab438d6b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployFundSwapAndDonate",
            "nameLocation": "3732:23:66",
            "parameters": {
              "id": 37971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37959,
                  "mutability": "mutable",
                  "name": "_manager",
                  "nameLocation": "3773:8:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 37992,
                  "src": "3765:16:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3765:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37961,
                  "mutability": "mutable",
                  "name": "_salt",
                  "nameLocation": "3799:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 37992,
                  "src": "3791:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 37960,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3791:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37964,
                  "mutability": "mutable",
                  "name": "_swapWrapper",
                  "nameLocation": "3827:12:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 37992,
                  "src": "3814:25:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISwapWrapper_$40947",
                    "typeString": "contract ISwapWrapper"
                  },
                  "typeName": {
                    "id": 37963,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37962,
                      "name": "ISwapWrapper",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40947,
                      "src": "3814:12:66"
                    },
                    "referencedDeclaration": 40947,
                    "src": "3814:12:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapWrapper_$40947",
                      "typeString": "contract ISwapWrapper"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37966,
                  "mutability": "mutable",
                  "name": "_tokenIn",
                  "nameLocation": "3857:8:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 37992,
                  "src": "3849:16:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37965,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3849:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37968,
                  "mutability": "mutable",
                  "name": "_amountIn",
                  "nameLocation": "3883:9:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 37992,
                  "src": "3875:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3875:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37970,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "3917:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 37992,
                  "src": "3902:20:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37969,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3902:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3755:173:66"
            },
            "returnParameters": {
              "id": 37975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37974,
                  "mutability": "mutable",
                  "name": "_fund",
                  "nameLocation": "3960:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 37992,
                  "src": "3955:10:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Fund_$36653",
                    "typeString": "contract Fund"
                  },
                  "typeName": {
                    "id": 37973,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37972,
                      "name": "Fund",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36653,
                      "src": "3955:4:66"
                    },
                    "referencedDeclaration": 36653,
                    "src": "3955:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Fund_$36653",
                      "typeString": "contract Fund"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3954:12:66"
            },
            "scope": 38253,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38044,
            "nodeType": "FunctionDefinition",
            "src": "4235:322:66",
            "nodes": [],
            "body": {
              "id": 38043,
              "nodeType": "Block",
              "src": "4296:261:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38001,
                      "name": "_org",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37999,
                      "src": "4306:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Org_$37774",
                        "typeString": "contract Org"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 38009,
                                      "name": "orgImplementation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 37809,
                                      "src": "4359:17:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Org_$37774",
                                        "typeString": "contract Org"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Org_$37774",
                                        "typeString": "contract Org"
                                      }
                                    ],
                                    "id": 38008,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4351:7:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 38007,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4351:7:66",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 38010,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4351:26:66",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 38011,
                                  "name": "_orgId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37995,
                                  "src": "4379:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 38005,
                                  "name": "Clones",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29396,
                                  "src": "4325:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Clones_$29396_$",
                                    "typeString": "type(library Clones)"
                                  }
                                },
                                "id": 38006,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cloneDeterministic",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 29361,
                                "src": "4325:25:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$",
                                  "typeString": "function (address,bytes32) returns (address)"
                                }
                              },
                              "id": 38012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4325:61:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 38004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4317:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 38003,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4317:8:66",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4317:70:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 38002,
                        "name": "Org",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37774,
                        "src": "4313:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Org_$37774_$",
                          "typeString": "type(contract Org)"
                        }
                      },
                      "id": 38014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4313:75:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Org_$37774",
                        "typeString": "contract Org"
                      }
                    },
                    "src": "4306:82:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Org_$37774",
                      "typeString": "contract Org"
                    }
                  },
                  "id": 38016,
                  "nodeType": "ExpressionStatement",
                  "src": "4306:82:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38020,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36596,
                        "src": "4414:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Registry_$39548",
                          "typeString": "contract Registry"
                        }
                      },
                      {
                        "id": 38021,
                        "name": "_orgId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37995,
                        "src": "4424:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Registry_$39548",
                          "typeString": "contract Registry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 38017,
                        "name": "_org",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37999,
                        "src": "4398:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Org_$37774",
                          "typeString": "contract Org"
                        }
                      },
                      "id": 38019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37751,
                      "src": "4398:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Registry_$39548_$_t_bytes32_$returns$__$",
                        "typeString": "function (contract Registry,bytes32) external"
                      }
                    },
                    "id": 38022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4398:33:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38023,
                  "nodeType": "ExpressionStatement",
                  "src": "4398:33:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38027,
                        "name": "_org",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37999,
                        "src": "4466:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Org_$37774",
                          "typeString": "contract Org"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Org_$37774",
                          "typeString": "contract Org"
                        }
                      ],
                      "expression": {
                        "id": 38024,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36596,
                        "src": "4441:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Registry_$39548",
                          "typeString": "contract Registry"
                        }
                      },
                      "id": 38026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setEntityActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39090,
                      "src": "4441:24:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Entity_$36587_$returns$__$",
                        "typeString": "function (contract Entity) external"
                      }
                    },
                    "id": 38028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4441:30:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38029,
                  "nodeType": "ExpressionStatement",
                  "src": "4441:30:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 38033,
                            "name": "_org",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37999,
                            "src": "4509:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Org_$37774",
                              "typeString": "contract Org"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Org_$37774",
                              "typeString": "contract Org"
                            }
                          ],
                          "id": 38032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4501:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 38031,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4501:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 38034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4501:13:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 38035,
                            "name": "_org",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37999,
                            "src": "4516:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Org_$37774",
                              "typeString": "contract Org"
                            }
                          },
                          "id": 38036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "entityType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37773,
                          "src": "4516:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$__$returns$_t_uint8_$",
                            "typeString": "function () pure external returns (uint8)"
                          }
                        },
                        "id": 38037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4516:17:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 38038,
                            "name": "_org",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37999,
                            "src": "4535:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Org_$37774",
                              "typeString": "contract Org"
                            }
                          },
                          "id": 38039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "manager",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35376,
                          "src": "4535:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 38040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4535:14:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38030,
                      "name": "EntityDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36605,
                      "src": "4486:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_address_$returns$__$",
                        "typeString": "function (address,uint8,address)"
                      }
                    },
                    "id": 38041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4486:64:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38042,
                  "nodeType": "EmitStatement",
                  "src": "4481:69:66"
                }
              ]
            },
            "documentation": {
              "id": 37993,
              "nodeType": "StructuredDocumentation",
              "src": "4098:132:66",
              "text": " @notice Deploys an Org.\n @param _orgId The Org's ID for tax purposes.\n @return _org The deployed Org."
            },
            "functionSelector": "a60fe71d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployOrg",
            "nameLocation": "4244:9:66",
            "parameters": {
              "id": 37996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37995,
                  "mutability": "mutable",
                  "name": "_orgId",
                  "nameLocation": "4262:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38044,
                  "src": "4254:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 37994,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4254:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4253:16:66"
            },
            "returnParameters": {
              "id": 38000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37999,
                  "mutability": "mutable",
                  "name": "_org",
                  "nameLocation": "4290:4:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38044,
                  "src": "4286:8:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Org_$37774",
                    "typeString": "contract Org"
                  },
                  "typeName": {
                    "id": 37998,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37997,
                      "name": "Org",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37774,
                      "src": "4286:3:66"
                    },
                    "referencedDeclaration": 37774,
                    "src": "4286:3:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Org_$37774",
                      "typeString": "contract Org"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4285:10:66"
            },
            "scope": 38253,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38067,
            "nodeType": "FunctionDefinition",
            "src": "4814:162:66",
            "nodes": [],
            "body": {
              "id": 38066,
              "nodeType": "Block",
              "src": "4903:73:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38055,
                      "name": "_org",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38053,
                      "src": "4913:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Org_$37774",
                        "typeString": "contract Org"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 38057,
                          "name": "_orgId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38047,
                          "src": "4930:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 38056,
                        "name": "deployOrg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38044,
                        "src": "4920:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_contract$_Org_$37774_$",
                          "typeString": "function (bytes32) returns (contract Org)"
                        }
                      },
                      "id": 38058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4920:17:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Org_$37774",
                        "typeString": "contract Org"
                      }
                    },
                    "src": "4913:24:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Org_$37774",
                      "typeString": "contract Org"
                    }
                  },
                  "id": 38060,
                  "nodeType": "ExpressionStatement",
                  "src": "4913:24:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38062,
                        "name": "_org",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38053,
                        "src": "4955:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Org_$37774",
                          "typeString": "contract Org"
                        }
                      },
                      {
                        "id": 38063,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38049,
                        "src": "4961:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Org_$37774",
                          "typeString": "contract Org"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38061,
                      "name": "_donate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38183,
                      "src": "4947:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Entity_$36587_$_t_uint256_$returns$__$",
                        "typeString": "function (contract Entity,uint256)"
                      }
                    },
                    "id": 38064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4947:22:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38065,
                  "nodeType": "ExpressionStatement",
                  "src": "4947:22:66"
                }
              ]
            },
            "documentation": {
              "id": 38045,
              "nodeType": "StructuredDocumentation",
              "src": "4563:246:66",
              "text": " @notice Deploys an Org then pulls base token from the sender and donates to it.\n @param _orgId The Org's ID for tax purposes.\n @param _amount The amount of base token to donate.\n @return _org The deployed Org."
            },
            "functionSelector": "db9e30cc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployOrgAndDonate",
            "nameLocation": "4823:18:66",
            "parameters": {
              "id": 38050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38047,
                  "mutability": "mutable",
                  "name": "_orgId",
                  "nameLocation": "4850:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38067,
                  "src": "4842:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 38046,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4842:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38049,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4866:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38067,
                  "src": "4858:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4858:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4841:33:66"
            },
            "returnParameters": {
              "id": 38054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38053,
                  "mutability": "mutable",
                  "name": "_org",
                  "nameLocation": "4897:4:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38067,
                  "src": "4893:8:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Org_$37774",
                    "typeString": "contract Org"
                  },
                  "typeName": {
                    "id": 38052,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38051,
                      "name": "Org",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37774,
                      "src": "4893:3:66"
                    },
                    "referencedDeclaration": 37774,
                    "src": "4893:3:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Org_$37774",
                      "typeString": "contract Org"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4892:10:66"
            },
            "scope": 38253,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38100,
            "nodeType": "FunctionDefinition",
            "src": "5595:329:66",
            "nodes": [],
            "body": {
              "id": 38099,
              "nodeType": "Block",
              "src": "5811:113:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38085,
                      "name": "_org",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38083,
                      "src": "5821:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Org_$37774",
                        "typeString": "contract Org"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 38087,
                          "name": "_orgId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38070,
                          "src": "5838:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 38086,
                        "name": "deployOrg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38044,
                        "src": "5828:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_contract$_Org_$37774_$",
                          "typeString": "function (bytes32) returns (contract Org)"
                        }
                      },
                      "id": 38088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5828:17:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Org_$37774",
                        "typeString": "contract Org"
                      }
                    },
                    "src": "5821:24:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Org_$37774",
                      "typeString": "contract Org"
                    }
                  },
                  "id": 38090,
                  "nodeType": "ExpressionStatement",
                  "src": "5821:24:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38092,
                        "name": "_org",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38083,
                        "src": "5870:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Org_$37774",
                          "typeString": "contract Org"
                        }
                      },
                      {
                        "id": 38093,
                        "name": "_swapWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38073,
                        "src": "5876:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapWrapper_$40947",
                          "typeString": "contract ISwapWrapper"
                        }
                      },
                      {
                        "id": 38094,
                        "name": "_tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38075,
                        "src": "5890:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38095,
                        "name": "_amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38077,
                        "src": "5900:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 38096,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38079,
                        "src": "5911:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Org_$37774",
                          "typeString": "contract Org"
                        },
                        {
                          "typeIdentifier": "t_contract$_ISwapWrapper_$40947",
                          "typeString": "contract ISwapWrapper"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 38091,
                      "name": "_swapAndDonate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38252,
                      "src": "5855:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Entity_$36587_$_t_contract$_ISwapWrapper_$40947_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (contract Entity,contract ISwapWrapper,address,uint256,bytes calldata)"
                      }
                    },
                    "id": 38097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5855:62:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38098,
                  "nodeType": "ExpressionStatement",
                  "src": "5855:62:66"
                }
              ]
            },
            "documentation": {
              "id": 38068,
              "nodeType": "StructuredDocumentation",
              "src": "4982:608:66",
              "text": " @notice Deploys a new Org, then pulls a ETH or ERC20 tokens, swaps them to base tokens,\n and donates to the new Org.\n @param _orgId The Org's ID for tax purposes.\n @param _swapWrapper The swap wrapper to use for the donation. Must be whitelisted on the Registry.\n @param _tokenIn The address of the ERC20 token to swap and donate, or ETH_PLACEHOLDER if donating ETH.\n @param _amountIn The amount of tokens or ETH being swapped and donated.\n @param _data Additional call data required by the ISwapWrapper being used.\n @return _org The deployed Org."
            },
            "functionSelector": "bf37a670",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployOrgSwapAndDonate",
            "nameLocation": "5604:22:66",
            "parameters": {
              "id": 38080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38070,
                  "mutability": "mutable",
                  "name": "_orgId",
                  "nameLocation": "5644:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38100,
                  "src": "5636:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 38069,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5636:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38073,
                  "mutability": "mutable",
                  "name": "_swapWrapper",
                  "nameLocation": "5673:12:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38100,
                  "src": "5660:25:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISwapWrapper_$40947",
                    "typeString": "contract ISwapWrapper"
                  },
                  "typeName": {
                    "id": 38072,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38071,
                      "name": "ISwapWrapper",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40947,
                      "src": "5660:12:66"
                    },
                    "referencedDeclaration": 40947,
                    "src": "5660:12:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapWrapper_$40947",
                      "typeString": "contract ISwapWrapper"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38075,
                  "mutability": "mutable",
                  "name": "_tokenIn",
                  "nameLocation": "5703:8:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38100,
                  "src": "5695:16:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5695:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38077,
                  "mutability": "mutable",
                  "name": "_amountIn",
                  "nameLocation": "5729:9:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38100,
                  "src": "5721:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38076,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5721:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38079,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5763:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38100,
                  "src": "5748:20:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38078,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5748:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5626:148:66"
            },
            "returnParameters": {
              "id": 38084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38083,
                  "mutability": "mutable",
                  "name": "_org",
                  "nameLocation": "5805:4:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38100,
                  "src": "5801:8:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Org_$37774",
                    "typeString": "contract Org"
                  },
                  "typeName": {
                    "id": 38082,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38081,
                      "name": "Org",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37774,
                      "src": "5801:3:66"
                    },
                    "referencedDeclaration": 37774,
                    "src": "5801:3:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Org_$37774",
                      "typeString": "contract Org"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5800:10:66"
            },
            "scope": 38253,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38122,
            "nodeType": "FunctionDefinition",
            "src": "6203:184:66",
            "nodes": [],
            "body": {
              "id": 38121,
              "nodeType": "Block",
              "src": "6278:109:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 38112,
                            "name": "orgImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37809,
                            "src": "6338:17:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Org_$37774",
                              "typeString": "contract Org"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Org_$37774",
                              "typeString": "contract Org"
                            }
                          ],
                          "id": 38111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6330:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 38110,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6330:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 38113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6330:26:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38114,
                        "name": "_orgId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38103,
                        "src": "6358:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 38117,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6374:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OrgFundFactory_$38253",
                              "typeString": "contract OrgFundFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OrgFundFactory_$38253",
                              "typeString": "contract OrgFundFactory"
                            }
                          ],
                          "id": 38116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6366:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 38115,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6366:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 38118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6366:13:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 38108,
                        "name": "Clones",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29396,
                        "src": "6295:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Clones_$29396_$",
                          "typeString": "type(library Clones)"
                        }
                      },
                      "id": 38109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "predictDeterministicAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29375,
                      "src": "6295:34:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,bytes32,address) pure returns (address)"
                      }
                    },
                    "id": 38119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6295:85:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 38107,
                  "id": 38120,
                  "nodeType": "Return",
                  "src": "6288:92:66"
                }
              ]
            },
            "documentation": {
              "id": 38101,
              "nodeType": "StructuredDocumentation",
              "src": "5930:268:66",
              "text": " @notice Calculates an Org contract's deployment address.\n @param _orgId Org's tax ID.\n @return The Org's deployment address.\n @dev This function is used off-chain by the automated tests to verify proper contract address deployment."
            },
            "functionSelector": "9fb8578d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeOrgAddress",
            "nameLocation": "6212:17:66",
            "parameters": {
              "id": 38104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38103,
                  "mutability": "mutable",
                  "name": "_orgId",
                  "nameLocation": "6238:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38122,
                  "src": "6230:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 38102,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6230:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6229:16:66"
            },
            "returnParameters": {
              "id": 38107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38122,
                  "src": "6269:7:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6269:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6268:9:66"
            },
            "scope": 38253,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38156,
            "nodeType": "FunctionDefinition",
            "src": "6772:268:66",
            "nodes": [],
            "body": {
              "id": 38155,
              "nodeType": "Block",
              "src": "6865:175:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 38136,
                            "name": "fundImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37813,
                            "src": "6938:18:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fund_$36653",
                              "typeString": "contract Fund"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Fund_$36653",
                              "typeString": "contract Fund"
                            }
                          ],
                          "id": 38135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6930:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 38134,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6930:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 38137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6930:27:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 38144,
                                    "name": "_manager",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38125,
                                    "src": "6990:8:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 38143,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6982:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes20_$",
                                    "typeString": "type(bytes20)"
                                  },
                                  "typeName": {
                                    "id": 38142,
                                    "name": "bytes20",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6982:7:66",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 38145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6982:17:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes20",
                                  "typeString": "bytes20"
                                }
                              },
                              {
                                "id": 38146,
                                "name": "_salt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38127,
                                "src": "7001:5:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes20",
                                  "typeString": "bytes20"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 38140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6969:5:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 38139,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6969:5:66",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 38141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "concat",
                              "nodeType": "MemberAccess",
                              "src": "6969:12:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 38147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6969:38:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 38138,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "6959:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 38148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6959:49:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 38151,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7018:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OrgFundFactory_$38253",
                              "typeString": "contract OrgFundFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OrgFundFactory_$38253",
                              "typeString": "contract OrgFundFactory"
                            }
                          ],
                          "id": 38150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7010:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 38149,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7010:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 38152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7010:13:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 38132,
                        "name": "Clones",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29396,
                        "src": "6882:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Clones_$29396_$",
                          "typeString": "type(library Clones)"
                        }
                      },
                      "id": 38133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "predictDeterministicAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29375,
                      "src": "6882:34:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,bytes32,address) pure returns (address)"
                      }
                    },
                    "id": 38153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6882:151:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 38131,
                  "id": 38154,
                  "nodeType": "Return",
                  "src": "6875:158:66"
                }
              ]
            },
            "documentation": {
              "id": 38123,
              "nodeType": "StructuredDocumentation",
              "src": "6393:374:66",
              "text": " @notice Calculates a Fund contract's deployment address.\n @param _manager The manager of the fund.\n @param _salt A 32-byte value used to create the contract at a deterministic address.\n @return The Fund's deployment address.\n @dev This function is used off-chain by the automated tests to verify proper contract address deployment."
            },
            "functionSelector": "099a81e3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeFundAddress",
            "nameLocation": "6781:18:66",
            "parameters": {
              "id": 38128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38125,
                  "mutability": "mutable",
                  "name": "_manager",
                  "nameLocation": "6808:8:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38156,
                  "src": "6800:16:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6800:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38127,
                  "mutability": "mutable",
                  "name": "_salt",
                  "nameLocation": "6826:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38156,
                  "src": "6818:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 38126,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6818:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6799:33:66"
            },
            "returnParameters": {
              "id": 38131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38130,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38156,
                  "src": "6856:7:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6856:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6855:9:66"
            },
            "scope": 38253,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38183,
            "nodeType": "FunctionDefinition",
            "src": "7121:321:66",
            "nodes": [],
            "body": {
              "id": 38182,
              "nodeType": "Block",
              "src": "7179:263:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 38168,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7361:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 38169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7361:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 38172,
                            "name": "_entity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38160,
                            "src": "7381:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Entity_$36587",
                              "typeString": "contract Entity"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Entity_$36587",
                              "typeString": "contract Entity"
                            }
                          ],
                          "id": 38171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7373:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 38170,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7373:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 38173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7373:16:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38174,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38162,
                        "src": "7391:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 38165,
                        "name": "baseToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37817,
                        "src": "7334:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$33443",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 38167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33489,
                      "src": "7334:26:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$33443_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$33443_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 38175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7334:65:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38176,
                  "nodeType": "ExpressionStatement",
                  "src": "7334:65:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 38177,
                        "name": "_entity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38160,
                        "src": "7409:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Entity_$36587",
                          "typeString": "contract Entity"
                        }
                      },
                      "id": 38179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "reconcileBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36240,
                      "src": "7409:24:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 38180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7409:26:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38181,
                  "nodeType": "ExpressionStatement",
                  "src": "7409:26:66"
                }
              ]
            },
            "documentation": {
              "id": 38157,
              "nodeType": "StructuredDocumentation",
              "src": "7046:70:66",
              "text": "@dev Pulls base tokens from sender and donates them to the entity."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_donate",
            "nameLocation": "7130:7:66",
            "parameters": {
              "id": 38163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38160,
                  "mutability": "mutable",
                  "name": "_entity",
                  "nameLocation": "7145:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38183,
                  "src": "7138:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Entity_$36587",
                    "typeString": "contract Entity"
                  },
                  "typeName": {
                    "id": 38159,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38158,
                      "name": "Entity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36587,
                      "src": "7138:6:66"
                    },
                    "referencedDeclaration": 36587,
                    "src": "7138:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Entity_$36587",
                      "typeString": "contract Entity"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38162,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "7162:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38183,
                  "src": "7154:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7154:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7137:33:66"
            },
            "returnParameters": {
              "id": 38164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7179:0:66"
            },
            "scope": 38253,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 38252,
            "nodeType": "FunctionDefinition",
            "src": "7540:548:66",
            "nodes": [],
            "body": {
              "id": 38251,
              "nodeType": "Block",
              "src": "7720:368:66",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 38201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 38199,
                      "name": "_tokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38192,
                      "src": "7734:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 38200,
                      "name": "ETH_PLACEHOLDER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37805,
                      "src": "7746:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7734:27:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38238,
                  "nodeType": "IfStatement",
                  "src": "7730:260:66",
                  "trueBody": {
                    "id": 38237,
                    "nodeType": "Block",
                    "src": "7763:227:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 38206,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7810:3:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 38207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7810:10:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 38210,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7830:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OrgFundFactory_$38253",
                                    "typeString": "contract OrgFundFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OrgFundFactory_$38253",
                                    "typeString": "contract OrgFundFactory"
                                  }
                                ],
                                "id": 38209,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7822:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 38208,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7822:7:66",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 38211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7822:13:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 38212,
                              "name": "_amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38194,
                              "src": "7837:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 38203,
                                  "name": "_tokenIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38192,
                                  "src": "7783:8:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 38202,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33443,
                                "src": "7777:5:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$33443_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 38204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7777:15:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$33443",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 38205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33489,
                            "src": "7777:32:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$33443_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$33443_$",
                              "typeString": "function (contract ERC20,address,address,uint256)"
                            }
                          },
                          "id": 38213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7777:70:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38214,
                        "nodeType": "ExpressionStatement",
                        "src": "7777:70:66"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 38221,
                                  "name": "_entity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38187,
                                  "src": "7897:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Entity_$36587",
                                    "typeString": "contract Entity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Entity_$36587",
                                    "typeString": "contract Entity"
                                  }
                                ],
                                "id": 38220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7889:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 38219,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7889:7:66",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 38222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7889:16:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 38223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7907:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 38216,
                                  "name": "_tokenIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38192,
                                  "src": "7867:8:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 38215,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33443,
                                "src": "7861:5:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$33443_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 38217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7861:15:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$33443",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 38218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33533,
                            "src": "7861:27:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$33443_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$33443_$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 38224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7861:48:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38225,
                        "nodeType": "ExpressionStatement",
                        "src": "7861:48:66"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 38232,
                                  "name": "_entity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38187,
                                  "src": "7959:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Entity_$36587",
                                    "typeString": "contract Entity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Entity_$36587",
                                    "typeString": "contract Entity"
                                  }
                                ],
                                "id": 38231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7951:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 38230,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7951:7:66",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 38233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7951:16:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 38234,
                              "name": "_amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38194,
                              "src": "7969:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 38227,
                                  "name": "_tokenIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38192,
                                  "src": "7929:8:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 38226,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33443,
                                "src": "7923:5:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$33443_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 38228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7923:15:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$33443",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 38229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33533,
                            "src": "7923:27:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$33443_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$33443_$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 38235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7923:56:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38236,
                        "nodeType": "ExpressionStatement",
                        "src": "7923:56:66"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38245,
                        "name": "_swapWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38190,
                        "src": "8040:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapWrapper_$40947",
                          "typeString": "contract ISwapWrapper"
                        }
                      },
                      {
                        "id": 38246,
                        "name": "_tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38192,
                        "src": "8054:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38247,
                        "name": "_amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38194,
                        "src": "8064:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 38248,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38196,
                        "src": "8075:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISwapWrapper_$40947",
                          "typeString": "contract ISwapWrapper"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ISwapWrapper_$40947",
                            "typeString": "contract ISwapWrapper"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "id": 38239,
                          "name": "_entity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38187,
                          "src": "8000:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Entity_$36587",
                            "typeString": "contract Entity"
                          }
                        },
                        "id": 38241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "swapAndDonate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35705,
                        "src": "8000:21:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_contract$_ISwapWrapper_$40947_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (contract ISwapWrapper,address,uint256,bytes memory) payable external"
                        }
                      },
                      "id": 38244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 38242,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8029:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 38243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "8029:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8000:39:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_ISwapWrapper_$40947_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$value",
                        "typeString": "function (contract ISwapWrapper,address,uint256,bytes memory) payable external"
                      }
                    },
                    "id": 38249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8000:81:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38250,
                  "nodeType": "ExpressionStatement",
                  "src": "8000:81:66"
                }
              ]
            },
            "documentation": {
              "id": 38184,
              "nodeType": "StructuredDocumentation",
              "src": "7448:87:66",
              "text": "@dev Pulls ERC20 tokens, or receives ETH, and swaps and donates them to the entity."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_swapAndDonate",
            "nameLocation": "7549:14:66",
            "parameters": {
              "id": 38197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38187,
                  "mutability": "mutable",
                  "name": "_entity",
                  "nameLocation": "7580:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38252,
                  "src": "7573:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Entity_$36587",
                    "typeString": "contract Entity"
                  },
                  "typeName": {
                    "id": 38186,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38185,
                      "name": "Entity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36587,
                      "src": "7573:6:66"
                    },
                    "referencedDeclaration": 36587,
                    "src": "7573:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Entity_$36587",
                      "typeString": "contract Entity"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38190,
                  "mutability": "mutable",
                  "name": "_swapWrapper",
                  "nameLocation": "7610:12:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38252,
                  "src": "7597:25:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISwapWrapper_$40947",
                    "typeString": "contract ISwapWrapper"
                  },
                  "typeName": {
                    "id": 38189,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38188,
                      "name": "ISwapWrapper",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40947,
                      "src": "7597:12:66"
                    },
                    "referencedDeclaration": 40947,
                    "src": "7597:12:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapWrapper_$40947",
                      "typeString": "contract ISwapWrapper"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38192,
                  "mutability": "mutable",
                  "name": "_tokenIn",
                  "nameLocation": "7640:8:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38252,
                  "src": "7632:16:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7632:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38194,
                  "mutability": "mutable",
                  "name": "_amountIn",
                  "nameLocation": "7666:9:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38252,
                  "src": "7658:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7658:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38196,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "7700:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 38252,
                  "src": "7685:20:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38195,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7685:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7563:148:66"
            },
            "returnParameters": {
              "id": 38198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7720:0:66"
            },
            "scope": 38253,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37796,
              "name": "EntityFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36618,
              "src": "618:13:66"
            },
            "id": 37797,
            "nodeType": "InheritanceSpecifier",
            "src": "618:13:66"
          }
        ],
        "canonicalName": "OrgFundFactory",
        "contractDependencies": [
          36653,
          37774
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 37795,
          "nodeType": "StructuredDocumentation",
          "src": "508:82:66",
          "text": " @notice This contract is the factory for both the Org and Fund objects."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          38253,
          36618
        ],
        "name": "OrgFundFactory",
        "nameLocation": "600:14:66",
        "scope": 38254,
        "usedErrors": []
      }
    ],
    "license": "BSD 3-Clause"
  },
  "id": 66
}