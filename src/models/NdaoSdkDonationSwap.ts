/* tslint:disable */
/* eslint-disable */
/**
 * Endaoment API
 * The official Endaoment API & SDK endpoints
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NdaoSdkDonationSwapQuote } from './NdaoSdkDonationSwapQuote';
import {
    NdaoSdkDonationSwapQuoteFromJSON,
    NdaoSdkDonationSwapQuoteFromJSONTyped,
    NdaoSdkDonationSwapQuoteToJSON,
} from './NdaoSdkDonationSwapQuote';

/**
 * 
 * @export
 * @interface NdaoSdkDonationSwap
 */
export interface NdaoSdkDonationSwap {
    /**
     * The address this transaction will be sent to
     * @type {string}
     * @memberof NdaoSdkDonationSwap
     */
    to: string;
    /**
     * The data this transaction will send to the destination contract
     * @type {string}
     * @memberof NdaoSdkDonationSwap
     */
    data: string;
    /**
     * The ETH value, if any, this transaction will send along. This value will only be > 0 if performing an ETH donation
     * @type {string}
     * @memberof NdaoSdkDonationSwap
     */
    value: string;
    /**
     * 
     * @type {NdaoSdkDonationSwapQuote}
     * @memberof NdaoSdkDonationSwap
     */
    quote: NdaoSdkDonationSwapQuote;
}

/**
 * Check if a given object implements the NdaoSdkDonationSwap interface.
 */
export function instanceOfNdaoSdkDonationSwap(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "to" in value;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "value" in value;
    isInstance = isInstance && "quote" in value;

    return isInstance;
}

export function NdaoSdkDonationSwapFromJSON(json: any): NdaoSdkDonationSwap {
    return NdaoSdkDonationSwapFromJSONTyped(json, false);
}

export function NdaoSdkDonationSwapFromJSONTyped(json: any, ignoreDiscriminator: boolean): NdaoSdkDonationSwap {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'to': json['to'],
        'data': json['data'],
        'value': json['value'],
        'quote': NdaoSdkDonationSwapQuoteFromJSON(json['quote']),
    };
}

export function NdaoSdkDonationSwapToJSON(value?: NdaoSdkDonationSwap | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'to': value.to,
        'data': value.data,
        'value': value.value,
        'quote': NdaoSdkDonationSwapQuoteToJSON(value.quote),
    };
}

