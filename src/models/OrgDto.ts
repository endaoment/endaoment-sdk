/* tslint:disable */
/* eslint-disable */
/**
 * Endaoment API
 * The official Endaoment API & SDK endpoints
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrgDto
 */
export interface OrgDto {
    /**
     * The org's name
     * @type {string}
     * @memberof OrgDto
     */
    name: string;
    /**
     * The org's EIN
     * @type {string}
     * @memberof OrgDto
     */
    ein: string;
    /**
     * The org's contract address
     * @type {string}
     * @memberof OrgDto
     */
    contractAddress: string;
    /**
     * The org's NTEE code
     * @type {string}
     * @memberof OrgDto
     */
    nteeCode: string;
    /**
     * The org's NTEE description
     * @type {string}
     * @memberof OrgDto
     */
    nteeDescription: string;
    /**
     * The org's description
     * @type {string}
     * @memberof OrgDto
     */
    description: string | null;
    /**
     * The org's Endaoment url
     * @type {string}
     * @memberof OrgDto
     */
    endaomentUrl: string;
}

/**
 * Check if a given object implements the OrgDto interface.
 */
export function instanceOfOrgDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "ein" in value;
    isInstance = isInstance && "contractAddress" in value;
    isInstance = isInstance && "nteeCode" in value;
    isInstance = isInstance && "nteeDescription" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "endaomentUrl" in value;

    return isInstance;
}

export function OrgDtoFromJSON(json: any): OrgDto {
    return OrgDtoFromJSONTyped(json, false);
}

export function OrgDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrgDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'ein': json['ein'],
        'contractAddress': json['contractAddress'],
        'nteeCode': json['nteeCode'],
        'nteeDescription': json['nteeDescription'],
        'description': json['description'],
        'endaomentUrl': json['endaomentUrl'],
    };
}

export function OrgDtoToJSON(value?: OrgDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'ein': value.ein,
        'contractAddress': value.contractAddress,
        'nteeCode': value.nteeCode,
        'nteeDescription': value.nteeDescription,
        'description': value.description,
        'endaomentUrl': value.endaomentUrl,
    };
}

